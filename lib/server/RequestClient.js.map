{"version":3,"sources":["../../src/server/RequestClient.js"],"names":["require","stripSlash","url","replace","module","exports","uppy","opts","onReceiveResponse","bind","response","state","getState","uppyServer","host","serverUrl","headers","has","get","setState","_getUrl","test","hostname","path","fetch","method","defaultHeaders","then","res","json","catch","err","Error","post","data","body","JSON","stringify","status","statusText","delete","credentials"],"mappings":"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","file":"RequestClient.js","sourcesContent":["'use strict'\r\n\r\nrequire('whatwg-fetch')\r\n\r\n// Remove the trailing slash so we can always safely append /xyz.\r\nfunction stripSlash (url) {\r\n  return url.replace(/\\/$/, '')\r\n}\r\n\r\nmodule.exports = class RequestClient {\r\n  constructor (uppy, opts) {\r\n    this.uppy = uppy\r\n    this.opts = opts\r\n    this.onReceiveResponse = this.onReceiveResponse.bind(this)\r\n  }\r\n\r\n  get hostname () {\r\n    const { uppyServer } = this.uppy.getState()\r\n    const host = this.opts.serverUrl\r\n    return stripSlash(uppyServer && uppyServer[host] ? uppyServer[host] : host)\r\n  }\r\n\r\n  get defaultHeaders () {\r\n    return {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  onReceiveResponse (response) {\r\n    const state = this.uppy.getState()\r\n    const uppyServer = state.uppyServer || {}\r\n    const host = this.opts.serverUrl\r\n    const headers = response.headers\r\n    // Store the self-identified domain name for the uppy-server we just hit.\r\n    if (headers.has('i-am') && headers.get('i-am') !== uppyServer[host]) {\r\n      this.uppy.setState({\r\n        uppyServer: Object.assign({}, uppyServer, {\r\n          [host]: headers.get('i-am')\r\n        })\r\n      })\r\n    }\r\n    return response\r\n  }\r\n\r\n  _getUrl (url) {\r\n    if (/^(https?:|)\\/\\//.test(url)) {\r\n      return url\r\n    }\r\n    return `${this.hostname}/${url}`\r\n  }\r\n\r\n  get (path) {\r\n    return fetch(this._getUrl(path), {\r\n      method: 'get',\r\n      headers: this.defaultHeaders\r\n    })\r\n      // @todo validate response status before calling json\r\n      .then(this.onReceiveResponse)\r\n      .then((res) => res.json())\r\n      .catch((err) => {\r\n        throw new Error(`Could not get ${this._getUrl(path)}. ${err}`)\r\n      })\r\n  }\r\n\r\n  post (path, data) {\r\n    return fetch(this._getUrl(path), {\r\n      method: 'post',\r\n      headers: this.defaultHeaders,\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(this.onReceiveResponse)\r\n      .then((res) => {\r\n        if (res.status < 200 || res.status > 300) {\r\n          throw new Error(`Could not post ${this._getUrl(path)}. ${res.statusText}`)\r\n        }\r\n        return res.json()\r\n      })\r\n      .catch((err) => {\r\n        throw new Error(`Could not post ${this._getUrl(path)}. ${err}`)\r\n      })\r\n  }\r\n\r\n  delete (path, data) {\r\n    return fetch(`${this.hostname}/${path}`, {\r\n      method: 'delete',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: data ? JSON.stringify(data) : null\r\n    })\r\n      .then(this.onReceiveResponse)\r\n      // @todo validate response status before calling json\r\n      .then((res) => res.json())\r\n      .catch((err) => {\r\n        throw new Error(`Could not delete ${this._getUrl(path)}. ${err}`)\r\n      })\r\n  }\r\n}\r\n"]}