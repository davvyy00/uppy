{"version":3,"sources":["../../src/server/RequestClient.test.js"],"names":["RequestClient","require","describe","it","mockCore","getState","a","serverUrl","b","expect","hostname","toBe"],"mappings":"AAAA,IAAMA,gBAAgBC,QAAQ,iBAAR,CAAtB;;AAEAC,SAAS,eAAT,EAA0B,YAAM;AAC9BC,KAAG,uCAAH,EAA4C,YAAM;AAChD,QAAMC,WAAW,EAAEC,UAAU;AAAA,eAAO,EAAP;AAAA,OAAZ,EAAjB;AACA,QAAMC,IAAI,IAAIN,aAAJ,CAAkBI,QAAlB,EAA4B,EAAEG,WAAW,uBAAb,EAA5B,CAAV;AACA,QAAMC,IAAI,IAAIR,aAAJ,CAAkBI,QAAlB,EAA4B,EAAEG,WAAW,wBAAb,EAA5B,CAAV;;AAEAE,WAAOH,EAAEI,QAAT,EAAmBC,IAAnB,CAAwB,uBAAxB;AACAF,WAAOD,EAAEE,QAAT,EAAmBC,IAAnB,CAAwB,uBAAxB;AACD,GAPD;AAQD,CATD","file":"RequestClient.test.js","sourcesContent":["const RequestClient = require('./RequestClient')\r\n\r\ndescribe('RequestClient', () => {\r\n  it('has a hostname without trailing slash', () => {\r\n    const mockCore = { getState: () => ({}) }\r\n    const a = new RequestClient(mockCore, { serverUrl: 'http://server.uppy.io' })\r\n    const b = new RequestClient(mockCore, { serverUrl: 'http://server.uppy.io/' })\r\n\r\n    expect(a.hostname).toBe('http://server.uppy.io')\r\n    expect(b.hostname).toBe('http://server.uppy.io')\r\n  })\r\n})\r\n"]}