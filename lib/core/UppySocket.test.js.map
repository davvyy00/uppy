{"version":3,"sources":["../../src/core/UppySocket.test.js"],"names":["UppySocket","require","describe","webSocketConstructorSpy","webSocketCloseSpy","webSocketSendSpy","beforeEach","jest","fn","global","WebSocket","target","close","args","send","json","triggerOpen","onopen","triggerClose","onclose","afterEach","undefined","it","expect","name","toEqual","mock","calls","uppySocket","webSocketInstance","socket","length","JSON","stringify","action","payload","queued","emitterListenerMock","on","onmessage","data","emit","once"],"mappings":"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","file":"UppySocket.test.js","sourcesContent":["const UppySocket = require('./UppySocket')\r\n\r\ndescribe('core/uppySocket', () => {\r\n  let webSocketConstructorSpy\r\n  let webSocketCloseSpy\r\n  let webSocketSendSpy\r\n\r\n  beforeEach(() => {\r\n    webSocketConstructorSpy = jest.fn()\r\n    webSocketCloseSpy = jest.fn()\r\n    webSocketSendSpy = jest.fn()\r\n\r\n    global.WebSocket = class WebSocket {\r\n      constructor (target) {\r\n        webSocketConstructorSpy(target)\r\n      }\r\n      close (args) {\r\n        webSocketCloseSpy(args)\r\n      }\r\n      send (json) {\r\n        webSocketSendSpy(json)\r\n      }\r\n      triggerOpen () {\r\n        this.onopen()\r\n      }\r\n      triggerClose () {\r\n        this.onclose()\r\n      }\r\n    }\r\n  })\r\n  afterEach(() => {\r\n    global.WebSocket = undefined\r\n  })\r\n\r\n  it('should expose a class', () => {\r\n    expect(UppySocket.name).toEqual('UppySocket')\r\n    expect(\r\n      new UppySocket({\r\n        target: 'foo'\r\n      }) instanceof UppySocket\r\n    )\r\n  })\r\n\r\n  it('should setup a new WebSocket', () => {\r\n    new UppySocket({ target: 'foo' }) // eslint-disable-line no-new\r\n    expect(webSocketConstructorSpy.mock.calls[0][0]).toEqual('foo')\r\n  })\r\n\r\n  it('should send a message via the websocket if the connection is open', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n    const webSocketInstance = uppySocket.socket\r\n    webSocketInstance.triggerOpen()\r\n\r\n    uppySocket.send('bar', 'boo')\r\n    expect(webSocketSendSpy.mock.calls.length).toEqual(1)\r\n    expect(webSocketSendSpy.mock.calls[0]).toEqual([\r\n      JSON.stringify({ action: 'bar', payload: 'boo' })\r\n    ])\r\n  })\r\n\r\n  it('should queue the message for the websocket if the connection is not open', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n\r\n    uppySocket.send('bar', 'boo')\r\n    expect(uppySocket.queued).toEqual([{ action: 'bar', payload: 'boo' }])\r\n    expect(webSocketSendSpy.mock.calls.length).toEqual(0)\r\n  })\r\n\r\n  it('should queue any messages for the websocket if the connection is not open, then send them when the connection is open', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n    const webSocketInstance = uppySocket.socket\r\n\r\n    uppySocket.send('bar', 'boo')\r\n    uppySocket.send('moo', 'baa')\r\n    expect(uppySocket.queued).toEqual([\r\n      { action: 'bar', payload: 'boo' },\r\n      { action: 'moo', payload: 'baa' }\r\n    ])\r\n    expect(webSocketSendSpy.mock.calls.length).toEqual(0)\r\n\r\n    webSocketInstance.triggerOpen()\r\n\r\n    expect(uppySocket.queued).toEqual([])\r\n    expect(webSocketSendSpy.mock.calls.length).toEqual(2)\r\n    expect(webSocketSendSpy.mock.calls[0]).toEqual([\r\n      JSON.stringify({ action: 'bar', payload: 'boo' })\r\n    ])\r\n    expect(webSocketSendSpy.mock.calls[1]).toEqual([\r\n      JSON.stringify({ action: 'moo', payload: 'baa' })\r\n    ])\r\n  })\r\n\r\n  it('should start queuing any messages when the websocket connection is closed', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n    const webSocketInstance = uppySocket.socket\r\n    webSocketInstance.triggerOpen()\r\n    uppySocket.send('bar', 'boo')\r\n    expect(uppySocket.queued).toEqual([])\r\n\r\n    webSocketInstance.triggerClose()\r\n    uppySocket.send('bar', 'boo')\r\n    expect(uppySocket.queued).toEqual([{ action: 'bar', payload: 'boo' }])\r\n  })\r\n\r\n  it('should close the websocket when it is force closed', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n    const webSocketInstance = uppySocket.socket\r\n    webSocketInstance.triggerOpen()\r\n\r\n    uppySocket.close()\r\n    expect(webSocketCloseSpy.mock.calls.length).toEqual(1)\r\n  })\r\n\r\n  it('should be able to subscribe to messages received on the websocket', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n    const webSocketInstance = uppySocket.socket\r\n\r\n    const emitterListenerMock = jest.fn()\r\n    uppySocket.on('hi', emitterListenerMock)\r\n\r\n    webSocketInstance.triggerOpen()\r\n    webSocketInstance.onmessage({\r\n      data: JSON.stringify({ action: 'hi', payload: 'ho' })\r\n    })\r\n    expect(emitterListenerMock.mock.calls).toEqual([\r\n      ['ho', undefined, undefined, undefined, undefined, undefined]\r\n    ])\r\n  })\r\n\r\n  it('should be able to emit messages and subscribe to them', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n\r\n    const emitterListenerMock = jest.fn()\r\n    uppySocket.on('hi', emitterListenerMock)\r\n\r\n    uppySocket.emit('hi', 'ho')\r\n    uppySocket.emit('hi', 'ho')\r\n    uppySocket.emit('hi', 'off to work we go')\r\n\r\n    expect(emitterListenerMock.mock.calls).toEqual([\r\n      ['ho', undefined, undefined, undefined, undefined, undefined],\r\n      ['ho', undefined, undefined, undefined, undefined, undefined],\r\n      [\r\n        'off to work we go',\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        undefined,\r\n        undefined\r\n      ]\r\n    ])\r\n  })\r\n\r\n  it('should be able to subscribe to the first event for a particular action', () => {\r\n    const uppySocket = new UppySocket({ target: 'foo' })\r\n\r\n    const emitterListenerMock = jest.fn()\r\n    uppySocket.once('hi', emitterListenerMock)\r\n\r\n    uppySocket.emit('hi', 'ho')\r\n    uppySocket.emit('hi', 'ho')\r\n    uppySocket.emit('hi', 'off to work we go')\r\n\r\n    expect(emitterListenerMock.mock.calls.length).toEqual(1)\r\n    expect(emitterListenerMock.mock.calls).toEqual([\r\n      ['ho', undefined, undefined, undefined, undefined, undefined]\r\n    ])\r\n  })\r\n})\r\n"]}