{"version":3,"sources":["../../src/react/ProgressBar.js"],"names":["React","require","PropTypes","ProgressBarPlugin","uppyPropType","uppy","h","createElement","ProgressBar","componentDidMount","props","options","id","target","container","use","plugin","getPlugin","componentWillUnmount","removePlugin","render","ref","Component","propTypes","fixed","bool","hideAfterFinish","defaultProps","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,YAAYD,QAAQ,YAAR,CAAlB;AACA,IAAME,oBAAoBF,QAAQ,wBAAR,CAA1B;AACA,IAAMG,eAAeH,QAAQ,aAAR,EAAuBI,IAA5C;;AAEA,IAAMC,IAAIN,MAAMO,aAAhB;;AAEA;;;;IAIMC,W;;;;;;;;;wBACJC,iB,gCAAqB;AACnB,QAAMJ,OAAO,KAAKK,KAAL,CAAWL,IAAxB;AACA,QAAMM,UAAU,SACd,EAAEC,IAAI,mBAAN,EADc,EAEd,KAAKF,KAFS,EAGd,EAAEG,QAAQ,KAAKC,SAAf,EAHc,CAAhB;AAKA,WAAOH,QAAQN,IAAf;;AAEAA,SAAKU,GAAL,CAASZ,iBAAT,EAA4BQ,OAA5B;;AAEA,SAAKK,MAAL,GAAcX,KAAKY,SAAL,CAAeN,QAAQC,EAAvB,CAAd;AACD,G;;wBAEDM,oB,mCAAwB;AACtB,QAAMb,OAAO,KAAKK,KAAL,CAAWL,IAAxB;;AAEAA,SAAKc,YAAL,CAAkB,KAAKH,MAAvB;AACD,G;;wBAEDI,M,qBAAU;AAAA;;AACR,WAAOd,EAAE,KAAF,EAAS;AACde,WAAK,aAACP,SAAD,EAAe;AAClB,eAAKA,SAAL,GAAiBA,SAAjB;AACD;AAHa,KAAT,CAAP;AAKD,G;;;EA3BuBd,MAAMsB,S;;AA8BhCd,YAAYe,SAAZ,GAAwB;AACtBlB,QAAMD,YADgB;AAEtBoB,SAAOtB,UAAUuB,IAFK;AAGtBC,mBAAiBxB,UAAUuB;AAHL,CAAxB;AAKAjB,YAAYmB,YAAZ,GAA2B,EAA3B;;AAGAC,OAAOC,OAAP,GAAiBrB,WAAjB","file":"ProgressBar.js","sourcesContent":["const React = require('react')\r\nconst PropTypes = require('prop-types')\r\nconst ProgressBarPlugin = require('../plugins/ProgressBar')\r\nconst uppyPropType = require('./propTypes').uppy\r\n\r\nconst h = React.createElement\r\n\r\n/**\r\n * React component that renders a progress bar at the top of the page.\r\n */\r\n\r\nclass ProgressBar extends React.Component {\r\n  componentDidMount () {\r\n    const uppy = this.props.uppy\r\n    const options = Object.assign(\r\n      { id: 'react:ProgressBar' },\r\n      this.props,\r\n      { target: this.container }\r\n    )\r\n    delete options.uppy\r\n\r\n    uppy.use(ProgressBarPlugin, options)\r\n\r\n    this.plugin = uppy.getPlugin(options.id)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    const uppy = this.props.uppy\r\n\r\n    uppy.removePlugin(this.plugin)\r\n  }\r\n\r\n  render () {\r\n    return h('div', {\r\n      ref: (container) => {\r\n        this.container = container\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nProgressBar.propTypes = {\r\n  uppy: uppyPropType,\r\n  fixed: PropTypes.bool,\r\n  hideAfterFinish: PropTypes.bool\r\n}\r\nProgressBar.defaultProps = {\r\n}\r\n\r\nmodule.exports = ProgressBar\r\n"]}