{"version":3,"sources":["../../src/react/DashboardModal.test.js"],"names":["h","require","createElement","mount","configure","ReactAdapter","Uppy","jest","mock","DashboardModal","beforeAll","adapter","beforeEach","prototype","openModal","fn","closeModal","describe","it","oninstall","onuninstall","uppy","dash","expect","toHaveBeenCalled","not","unmount","instance","plugin","setProps","open"],"mappings":";;AAAA,IAAMA,IAAIC,QAAQ,OAAR,EAAiBC,aAA3B;;eAC6BD,QAAQ,QAAR,C;IAArBE,K,YAAAA,K;IAAOC,S,YAAAA,S;;AACf,IAAMC,eAAeJ,QAAQ,yBAAR,CAArB;AACA,IAAMK,OAAOL,QAAQ,SAAR,CAAb;;AAEAM,KAAKC,IAAL,CAAU,sBAAV,EAAkC;AAAA,SAAMP,QAAQ,6BAAR,CAAN;AAAA,CAAlC;;AAEA,IAAMQ,iBAAiBR,QAAQ,kBAAR,CAAvB;;AAEAS,UAAU,YAAM;AACdN,YAAU,EAAEO,SAAS,IAAIN,YAAJ,EAAX,EAAV;AACD,CAFD;;AAIAO,WAAW,YAAM;AACf,WAAcX,QAAQ,sBAAR,EAAgCY,SAA9C,EAAyD;AACvDC,eAAWP,KAAKQ,EAAL,EAD4C;AAEvDC,gBAAYT,KAAKQ,EAAL;AAF2C,GAAzD;AAID,CALD;;AAOAE,SAAS,0BAAT,EAAqC,YAAM;AACzCC,KAAG,8BAAH,EAAmC,YAAM;AACvC,QAAMC,YAAYZ,KAAKQ,EAAL,EAAlB;AACA,QAAMK,cAAcb,KAAKQ,EAAL,EAApB;AACA,QAAMM,OAAOf,MAAb;AACA,QAAMgB,OAAOnB,MACX,EAAC,cAAD;AACE,YAAMkB,IADR;AAEE,iBAAWF,SAFb;AAGE,mBAAaC;AAHf,MADW,CAAb;;AAQAG,WAAOJ,SAAP,EAAkBK,gBAAlB;AACAD,WAAOH,WAAP,EAAoBK,GAApB,CAAwBD,gBAAxB;;AAEAF,SAAKI,OAAL;;AAEAH,WAAOJ,SAAP,EAAkBK,gBAAlB;AACAD,WAAOH,WAAP,EAAoBI,gBAApB;AACD,GAnBD;;AAqBAN,KAAG,8CAAH,EAAmD,YAAM;AACvD,QAAMG,OAAOf,MAAb;AACA,QAAMgB,OAAOnB,MACX,EAAC,cAAD;AACE,YAAMkB,IADR;AAEE,YAAM;AAFR,MADW,CAAb;;AAFuD,yBAQpCC,KAAKK,QAAL,EARoC;AAAA,QAQ/CC,MAR+C,kBAQ/CA,MAR+C;;AAUvDL,WAAOK,OAAOd,SAAd,EAAyBW,GAAzB,CAA6BD,gBAA7B;;AAEAF,SAAKO,QAAL,CAAc,EAAEC,MAAM,IAAR,EAAd;;AAEAP,WAAOK,OAAOd,SAAd,EAAyBU,gBAAzB;;AAEAF,SAAKI,OAAL;AACD,GAjBD;;AAmBAR,KAAG,gDAAH,EAAqD,YAAM;AACzD,QAAMG,OAAOf,MAAb;AACA,QAAMgB,OAAOnB,MACX,EAAC,cAAD;AACE,YAAMkB,IADR;AAEE;AAFF,MADW,CAAb;;AAFyD,0BAQtCC,KAAKK,QAAL,EARsC;AAAA,QAQjDC,MARiD,mBAQjDA,MARiD;;AAUzDL,WAAOK,OAAOd,SAAd,EAAyBU,gBAAzB;AACAD,WAAOK,OAAOZ,UAAd,EAA0BS,GAA1B,CAA8BD,gBAA9B;;AAEAF,SAAKO,QAAL,CAAc,EAAEC,MAAM,KAAR,EAAd;;AAEAP,WAAOK,OAAOZ,UAAd,EAA0BQ,gBAA1B;;AAEAF,SAAKI,OAAL;AACD,GAlBD;AAmBD,CA5DD","file":"DashboardModal.test.js","sourcesContent":["const h = require('react').createElement\r\nconst { mount, configure } = require('enzyme')\r\nconst ReactAdapter = require('enzyme-adapter-react-16')\r\nconst Uppy = require('../core')\r\n\r\njest.mock('../plugins/Dashboard', () => require('./__mocks__/DashboardPlugin'))\r\n\r\nconst DashboardModal = require('./DashboardModal')\r\n\r\nbeforeAll(() => {\r\n  configure({ adapter: new ReactAdapter() })\r\n})\r\n\r\nbeforeEach(() => {\r\n  Object.assign(require('../plugins/Dashboard').prototype, {\r\n    openModal: jest.fn(),\r\n    closeModal: jest.fn()\r\n  })\r\n})\r\n\r\ndescribe('react <DashboardModal />', () => {\r\n  it('can be mounted and unmounted', () => {\r\n    const oninstall = jest.fn()\r\n    const onuninstall = jest.fn()\r\n    const uppy = Uppy()\r\n    const dash = mount((\r\n      <DashboardModal\r\n        uppy={uppy}\r\n        onInstall={oninstall}\r\n        onUninstall={onuninstall}\r\n      />\r\n    ))\r\n\r\n    expect(oninstall).toHaveBeenCalled()\r\n    expect(onuninstall).not.toHaveBeenCalled()\r\n\r\n    dash.unmount()\r\n\r\n    expect(oninstall).toHaveBeenCalled()\r\n    expect(onuninstall).toHaveBeenCalled()\r\n  })\r\n\r\n  it('opens the modal using the `open={true}` prop', () => {\r\n    const uppy = Uppy()\r\n    const dash = mount((\r\n      <DashboardModal\r\n        uppy={uppy}\r\n        open={false}\r\n      />\r\n    ))\r\n    const { plugin } = dash.instance()\r\n\r\n    expect(plugin.openModal).not.toHaveBeenCalled()\r\n\r\n    dash.setProps({ open: true })\r\n\r\n    expect(plugin.openModal).toHaveBeenCalled()\r\n\r\n    dash.unmount()\r\n  })\r\n\r\n  it('closes the modal using the `open={false}` prop', () => {\r\n    const uppy = Uppy()\r\n    const dash = mount((\r\n      <DashboardModal\r\n        uppy={uppy}\r\n        open\r\n      />\r\n    ))\r\n    const { plugin } = dash.instance()\r\n\r\n    expect(plugin.openModal).toHaveBeenCalled()\r\n    expect(plugin.closeModal).not.toHaveBeenCalled()\r\n\r\n    dash.setProps({ open: false })\r\n\r\n    expect(plugin.closeModal).toHaveBeenCalled()\r\n\r\n    dash.unmount()\r\n  })\r\n})\r\n"]}