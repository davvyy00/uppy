{"version":3,"sources":["../../../src/views/ProviderView/ItemList.js"],"names":["Row","require","h","module","exports","props","folders","length","files","i18n","handleScroll","title","map","isDisabled","isChecked","folder","loading","getItemName","id","getItemId","type","getItemIcon","handleFolderClick","handleClick","e","toggleCheckbox","columns","showTitles","file"],"mappings":"AAAA,IAAMA,MAAMC,QAAQ,QAAR,CAAZ;;eACcA,QAAQ,QAAR,C;IAANC,C,YAAAA,C;;AAERC,OAAOC,OAAP,GAAiB,UAACC,KAAD,EAAW;AAC1B,MAAI,CAACA,MAAMC,OAAN,CAAcC,MAAf,IAAyB,CAACF,MAAMG,KAAN,CAAYD,MAA1C,EAAkD;AAChD,WAAO;AAAA;AAAA,QAAK,SAAM,qBAAX;AAAkCF,YAAMI,IAAN,CAAW,cAAX;AAAlC,KAAP;AACD;;AAED,SACE;AAAA;AAAA,MAAK,SAAM,2BAAX;AACE;AAAA;AAAA,QAAI,SAAM,2BAAV;AACE,kBAAUJ,MAAMK,YADlB;AAEE,cAAK,SAFP;AAGE,8CAAkCL,MAAMM,KAH1C;AAIGN,YAAMC,OAAN,CAAcM,GAAd,CAAkB,kBAAU;AAC3B,YAAIC,aAAa,KAAjB;AACA,YAAIC,YAAYT,MAAMS,SAAN,CAAgBC,MAAhB,CAAhB;AACA,YAAID,SAAJ,EAAe;AACbD,uBAAaC,UAAUE,OAAvB;AACD;AACD,eAAOhB,IAAI;AACTW,iBAAON,MAAMY,WAAN,CAAkBF,MAAlB,CADE;AAETG,cAAIb,MAAMc,SAAN,CAAgBJ,MAAhB,CAFK;AAGTK,gBAAM,QAHG;AAIT;AACAC,uBAAa;AAAA,mBAAMhB,MAAMgB,WAAN,CAAkBN,MAAlB,CAAN;AAAA,WALJ;AAMTF,sBAAYA,UANH;AAOTC,qBAAWA,SAPF;AAQTQ,6BAAmB;AAAA,mBAAMjB,MAAMiB,iBAAN,CAAwBP,MAAxB,CAAN;AAAA,WARV;AASTQ,uBAAa,qBAACC,CAAD;AAAA,mBAAOnB,MAAMoB,cAAN,CAAqBD,CAArB,EAAwBT,MAAxB,CAAP;AAAA,WATJ;AAUTW,mBAASrB,MAAMqB,OAVN;AAWTC,sBAAYtB,MAAMsB;AAXT,SAAJ,CAAP;AAaD,OAnBA,CAJH;AAwBGtB,YAAMG,KAAN,CAAYI,GAAZ,CAAgB,gBAAQ;AACvB,eAAOZ,IAAI;AACTW,iBAAON,MAAMY,WAAN,CAAkBW,IAAlB,CADE;AAETV,cAAIb,MAAMc,SAAN,CAAgBS,IAAhB,CAFK;AAGTR,gBAAM,MAHG;AAIT;AACAC,uBAAa;AAAA,mBAAMhB,MAAMgB,WAAN,CAAkBO,IAAlB,CAAN;AAAA,WALJ;AAMTf,sBAAY,KANH;AAOTC,qBAAWT,MAAMS,SAAN,CAAgBc,IAAhB,CAPF;AAQTL,uBAAa,qBAACC,CAAD;AAAA,mBAAOnB,MAAMoB,cAAN,CAAqBD,CAArB,EAAwBI,IAAxB,CAAP;AAAA,WARJ;AASTF,mBAASrB,MAAMqB,OATN;AAUTC,sBAAYtB,MAAMsB;AAVT,SAAJ,CAAP;AAYD,OAbA;AAxBH;AADF,GADF;AA2CD,CAhDD","file":"ItemList.js","sourcesContent":["const Row = require('./Item')\r\nconst { h } = require('preact')\r\n\r\nmodule.exports = (props) => {\r\n  if (!props.folders.length && !props.files.length) {\r\n    return <div class=\"uppy-Provider-empty\">{props.i18n('noFilesFound')}</div>\r\n  }\r\n\r\n  return (\r\n    <div class=\"uppy-ProviderBrowser-body\">\r\n      <ul class=\"uppy-ProviderBrowser-list\"\r\n        onscroll={props.handleScroll}\r\n        role=\"listbox\"\r\n        aria-label={`List of files from ${props.title}`}>\r\n        {props.folders.map(folder => {\r\n          let isDisabled = false\r\n          let isChecked = props.isChecked(folder)\r\n          if (isChecked) {\r\n            isDisabled = isChecked.loading\r\n          }\r\n          return Row({\r\n            title: props.getItemName(folder),\r\n            id: props.getItemId(folder),\r\n            type: 'folder',\r\n            // active: props.activeRow(folder),\r\n            getItemIcon: () => props.getItemIcon(folder),\r\n            isDisabled: isDisabled,\r\n            isChecked: isChecked,\r\n            handleFolderClick: () => props.handleFolderClick(folder),\r\n            handleClick: (e) => props.toggleCheckbox(e, folder),\r\n            columns: props.columns,\r\n            showTitles: props.showTitles\r\n          })\r\n        })}\r\n        {props.files.map(file => {\r\n          return Row({\r\n            title: props.getItemName(file),\r\n            id: props.getItemId(file),\r\n            type: 'file',\r\n            // active: props.activeRow(file),\r\n            getItemIcon: () => props.getItemIcon(file),\r\n            isDisabled: false,\r\n            isChecked: props.isChecked(file),\r\n            handleClick: (e) => props.toggleCheckbox(e, file),\r\n            columns: props.columns,\r\n            showTitles: props.showTitles\r\n          })\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n"]}