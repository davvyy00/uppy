{"version":3,"sources":["../../src/plugins/Tus.js"],"names":["Plugin","require","tus","UppySocket","Provider","RequestClient","emitSocketProgress","getSocketHost","settle","limitPromises","tusDefaultOptions","endpoint","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","createEventTracker","emitter","events","on","event","fn","push","remove","forEach","off","module","exports","uppy","opts","type","id","title","defaultOptions","autoRetry","useFastRemoteRetry","limit","limitUploads","uploaders","Object","create","uploaderEvents","uploaderSockets","handleResetProgress","bind","handleUpload","files","getState","keys","fileID","tusState","setState","resetUploaderReferences","abort","close","upload","file","current","total","resolve","reject","optsTus","err","log","emit","message","bytesUploaded","bytesTotal","onReceiveUploadUrl","url","uploader","name","copyProp","obj","srcProp","destProp","prototype","hasOwnProperty","call","meta","metadata","Upload","data","onFileRemove","targetFileID","onPause","isPaused","start","onPauseAll","onCancelAll","onResumeAll","error","uploadRemote","remote","serverToken","connectToServerSocket","then","catch","Client","providerOptions","provider","client","post","body","protocol","size","res","setFileState","token","getFile","Error","host","serverUrl","socket","target","send","onRetry","onRetryAll","progressData","errData","cause","uploadURL","currentFile","cb","filesToRetry","uploadFiles","actions","map","i","parseInt","length","isRemote","promises","action","limitedAction","fileIDs","filesToUpload","install","capabilities","resumableUploads","addUploader","retryAll","uninstall","removeUploader"],"mappings":"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","file":"Tus.js","sourcesContent":["const Plugin = require('../core/Plugin')\r\nconst tus = require('tus-js-client')\r\nconst UppySocket = require('../core/UppySocket')\r\nconst { Provider, RequestClient } = require('../server')\r\nconst emitSocketProgress = require('../utils/emitSocketProgress')\r\nconst getSocketHost = require('../utils/getSocketHost')\r\nconst settle = require('../utils/settle')\r\nconst limitPromises = require('../utils/limitPromises')\r\nrequire('whatwg-fetch')\r\n\r\n// Extracted from https://github.com/tus/tus-js-client/blob/master/lib/upload.js#L13\r\n// excepted we removed 'fingerprint' key to avoid adding more dependencies\r\nconst tusDefaultOptions = {\r\n  endpoint: '',\r\n  resume: true,\r\n  onProgress: null,\r\n  onChunkComplete: null,\r\n  onSuccess: null,\r\n  onError: null,\r\n  headers: {},\r\n  chunkSize: Infinity,\r\n  withCredentials: false,\r\n  uploadUrl: null,\r\n  uploadSize: null,\r\n  overridePatchMethod: false,\r\n  retryDelays: null\r\n}\r\n\r\n/**\r\n * Create a wrapper around an event emitter with a `remove` method to remove\r\n * all events that were added using the wrapped emitter.\r\n */\r\nfunction createEventTracker (emitter) {\r\n  const events = []\r\n  return {\r\n    on (event, fn) {\r\n      events.push([ event, fn ])\r\n      return emitter.on(event, fn)\r\n    },\r\n    remove () {\r\n      events.forEach(([ event, fn ]) => {\r\n        emitter.off(event, fn)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Tus resumable file uploader\r\n *\r\n */\r\nmodule.exports = class Tus extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'uploader'\r\n    this.id = 'Tus'\r\n    this.title = 'Tus'\r\n\r\n    // set default options\r\n    const defaultOptions = {\r\n      resume: true,\r\n      autoRetry: true,\r\n      useFastRemoteRetry: true,\r\n      limit: 0,\r\n      retryDelays: [0, 1000, 3000, 5000]\r\n    }\r\n\r\n    // merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n\r\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\r\n    if (typeof this.opts.limit === 'number' && this.opts.limit !== 0) {\r\n      this.limitUploads = limitPromises(this.opts.limit)\r\n    } else {\r\n      this.limitUploads = (fn) => fn\r\n    }\r\n\r\n    this.uploaders = Object.create(null)\r\n    this.uploaderEvents = Object.create(null)\r\n    this.uploaderSockets = Object.create(null)\r\n\r\n    this.handleResetProgress = this.handleResetProgress.bind(this)\r\n    this.handleUpload = this.handleUpload.bind(this)\r\n  }\r\n\r\n  handleResetProgress () {\r\n    const files = Object.assign({}, this.uppy.getState().files)\r\n    Object.keys(files).forEach((fileID) => {\r\n      // Only clone the file object if it has a Tus `uploadUrl` attached.\r\n      if (files[fileID].tus && files[fileID].tus.uploadUrl) {\r\n        const tusState = Object.assign({}, files[fileID].tus)\r\n        delete tusState.uploadUrl\r\n        files[fileID] = Object.assign({}, files[fileID], { tus: tusState })\r\n      }\r\n    })\r\n\r\n    this.uppy.setState({ files })\r\n  }\r\n\r\n  /**\r\n   * Clean up all references for a file's upload: the tus.Upload instance,\r\n   * any events related to the file, and the uppy-server WebSocket connection.\r\n   */\r\n  resetUploaderReferences (fileID) {\r\n    if (this.uploaders[fileID]) {\r\n      this.uploaders[fileID].abort()\r\n      this.uploaders[fileID] = null\r\n    }\r\n    if (this.uploaderEvents[fileID]) {\r\n      this.uploaderEvents[fileID].remove()\r\n      this.uploaderEvents[fileID] = null\r\n    }\r\n    if (this.uploaderSockets[fileID]) {\r\n      this.uploaderSockets[fileID].close()\r\n      this.uploaderSockets[fileID] = null\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new Tus upload\r\n   *\r\n   * @param {object} file for use with upload\r\n   * @param {integer} current file in a queue\r\n   * @param {integer} total number of files in a queue\r\n   * @returns {Promise}\r\n   */\r\n  upload (file, current, total) {\r\n    this.resetUploaderReferences(file.id)\r\n\r\n    // Create a new tus upload\r\n    return new Promise((resolve, reject) => {\r\n      const optsTus = Object.assign(\r\n        {},\r\n        tusDefaultOptions,\r\n        this.opts,\r\n        // Install file-specific upload overrides.\r\n        file.tus || {}\r\n      )\r\n\r\n      optsTus.onError = (err) => {\r\n        this.uppy.log(err)\r\n        this.uppy.emit('upload-error', file, err)\r\n        err.message = `Failed because: ${err.message}`\r\n\r\n        this.resetUploaderReferences(file.id)\r\n        reject(err)\r\n      }\r\n\r\n      optsTus.onProgress = (bytesUploaded, bytesTotal) => {\r\n        this.onReceiveUploadUrl(file, upload.url)\r\n        this.uppy.emit('upload-progress', file, {\r\n          uploader: this,\r\n          bytesUploaded: bytesUploaded,\r\n          bytesTotal: bytesTotal\r\n        })\r\n      }\r\n\r\n      optsTus.onSuccess = () => {\r\n        this.uppy.emit('upload-success', file, upload, upload.url)\r\n\r\n        if (upload.url) {\r\n          this.uppy.log('Download ' + upload.file.name + ' from ' + upload.url)\r\n        }\r\n\r\n        this.resetUploaderReferences(file.id)\r\n        resolve(upload)\r\n      }\r\n\r\n      const copyProp = (obj, srcProp, destProp) => {\r\n        if (\r\n          Object.prototype.hasOwnProperty.call(obj, srcProp) &&\r\n          !Object.prototype.hasOwnProperty.call(obj, destProp)\r\n        ) {\r\n          obj[destProp] = obj[srcProp]\r\n        }\r\n      }\r\n\r\n      // tusd uses metadata fields 'filetype' and 'filename'\r\n      const meta = Object.assign({}, file.meta)\r\n      copyProp(meta, 'type', 'filetype')\r\n      copyProp(meta, 'name', 'filename')\r\n      optsTus.metadata = meta\r\n\r\n      const upload = new tus.Upload(file.data, optsTus)\r\n      this.uploaders[file.id] = upload\r\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\r\n\r\n      this.onFileRemove(file.id, (targetFileID) => {\r\n        this.resetUploaderReferences(file.id)\r\n        resolve(`upload ${targetFileID} was removed`)\r\n      })\r\n\r\n      this.onPause(file.id, (isPaused) => {\r\n        if (isPaused) {\r\n          upload.abort()\r\n        } else {\r\n          upload.start()\r\n        }\r\n      })\r\n\r\n      this.onPauseAll(file.id, () => {\r\n        upload.abort()\r\n      })\r\n\r\n      this.onCancelAll(file.id, () => {\r\n        this.resetUploaderReferences(file.id)\r\n      })\r\n\r\n      this.onResumeAll(file.id, () => {\r\n        if (file.error) {\r\n          upload.abort()\r\n        }\r\n        upload.start()\r\n      })\r\n\r\n      if (!file.isPaused) {\r\n        upload.start()\r\n      }\r\n    })\r\n  }\r\n\r\n  uploadRemote (file, current, total) {\r\n    this.resetUploaderReferences(file.id)\r\n\r\n    const opts = Object.assign(\r\n      {},\r\n      this.opts,\r\n      // Install file-specific upload overrides.\r\n      file.tus || {}\r\n    )\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.uppy.log(file.remote.url)\r\n      if (file.serverToken) {\r\n        return this.connectToServerSocket(file)\r\n          .then(() => resolve())\r\n          .catch(reject)\r\n      }\r\n\r\n      this.uppy.emit('upload-started', file)\r\n      const Client = file.remote.providerOptions.provider ? Provider : RequestClient\r\n      const client = new Client(this.uppy, file.remote.providerOptions)\r\n      client.post(\r\n        file.remote.url,\r\n        Object.assign({}, file.remote.body, {\r\n          endpoint: opts.endpoint,\r\n          uploadUrl: opts.uploadUrl,\r\n          protocol: 'tus',\r\n          size: file.data.size,\r\n          metadata: file.meta\r\n        })\r\n      ).then((res) => {\r\n        this.uppy.setFileState(file.id, { serverToken: res.token })\r\n        file = this.uppy.getFile(file.id)\r\n        return file\r\n      })\r\n      .then((file) => {\r\n        return this.connectToServerSocket(file)\r\n      })\r\n      .then(() => {\r\n        resolve()\r\n      })\r\n      .catch((err) => {\r\n        reject(new Error(err))\r\n      })\r\n    })\r\n  }\r\n\r\n  connectToServerSocket (file) {\r\n    return new Promise((resolve, reject) => {\r\n      const token = file.serverToken\r\n      const host = getSocketHost(file.remote.serverUrl)\r\n      const socket = new UppySocket({ target: `${host}/api/${token}` })\r\n      this.uploaderSockets[file.id] = socket\r\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\r\n\r\n      this.onFileRemove(file.id, () => {\r\n        socket.send('pause', {})\r\n        resolve(`upload ${file.id} was removed`)\r\n      })\r\n\r\n      this.onPause(file.id, (isPaused) => {\r\n        isPaused ? socket.send('pause', {}) : socket.send('resume', {})\r\n      })\r\n\r\n      this.onPauseAll(file.id, () => socket.send('pause', {}))\r\n\r\n      this.onCancelAll(file.id, () => socket.send('pause', {}))\r\n\r\n      this.onResumeAll(file.id, () => {\r\n        if (file.error) {\r\n          socket.send('pause', {})\r\n        }\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      this.onRetry(file.id, () => {\r\n        socket.send('pause', {})\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      this.onRetryAll(file.id, () => {\r\n        socket.send('pause', {})\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      if (file.isPaused) {\r\n        socket.send('pause', {})\r\n      }\r\n\r\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\r\n\r\n      socket.on('error', (errData) => {\r\n        const { message } = errData.error\r\n        const error = Object.assign(new Error(message), { cause: errData.error })\r\n\r\n        // If the remote retry optimisation should not be used,\r\n        // close the socket—this will tell uppy-server to clear state and delete the file.\r\n        if (!this.opts.useFastRemoteRetry) {\r\n          this.resetUploaderReferences(file.id)\r\n          // Remove the serverToken so that a new one will be created for the retry.\r\n          this.uppy.setFileState(file.id, {\r\n            serverToken: null\r\n          })\r\n        }\r\n\r\n        this.uppy.emit('upload-error', file, error)\r\n        reject(error)\r\n      })\r\n\r\n      socket.on('success', (data) => {\r\n        this.uppy.emit('upload-success', file, data, data.url)\r\n        this.resetUploaderReferences(file.id)\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  onReceiveUploadUrl (file, uploadURL) {\r\n    const currentFile = this.uppy.getFile(file.id)\r\n    if (!currentFile) return\r\n    // Only do the update if we didn't have an upload URL yet,\r\n    // or resume: false in options\r\n    if ((!currentFile.tus || currentFile.tus.uploadUrl !== uploadURL) && this.opts.resume) {\r\n      this.uppy.log('[Tus] Storing upload url')\r\n      this.uppy.setFileState(currentFile.id, {\r\n        tus: Object.assign({}, currentFile.tus, {\r\n          uploadUrl: uploadURL\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  onFileRemove (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\r\n      if (fileID === file.id) cb(file.id)\r\n    })\r\n  }\r\n\r\n  onPause (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\r\n      if (fileID === targetFileID) {\r\n        // const isPaused = this.uppy.pauseResume(fileID)\r\n        cb(isPaused)\r\n      }\r\n    })\r\n  }\r\n\r\n  onRetry (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\r\n      if (fileID === targetFileID) {\r\n        cb()\r\n      }\r\n    })\r\n  }\r\n\r\n  onRetryAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('retry-all', (filesToRetry) => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onPauseAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('pause-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onCancelAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('cancel-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onResumeAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('resume-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  uploadFiles (files) {\r\n    const actions = files.map((file, i) => {\r\n      const current = parseInt(i, 10) + 1\r\n      const total = files.length\r\n\r\n      if (file.error) {\r\n        return () => Promise.reject(new Error(file.error))\r\n      } else if (file.isRemote) {\r\n        // We emit upload-started here, so that it's also emitted for files\r\n        // that have to wait due to the `limit` option.\r\n        this.uppy.emit('upload-started', file)\r\n        return this.uploadRemote.bind(this, file, current, total)\r\n      } else {\r\n        this.uppy.emit('upload-started', file)\r\n        return this.upload.bind(this, file, current, total)\r\n      }\r\n    })\r\n\r\n    const promises = actions.map((action) => {\r\n      const limitedAction = this.limitUploads(action)\r\n      return limitedAction()\r\n    })\r\n\r\n    return settle(promises)\r\n  }\r\n\r\n  handleUpload (fileIDs) {\r\n    if (fileIDs.length === 0) {\r\n      this.uppy.log('Tus: no files to upload!')\r\n      return Promise.resolve()\r\n    }\r\n\r\n    this.uppy.log('Tus is uploading...')\r\n    const filesToUpload = fileIDs.map((fileID) => this.uppy.getFile(fileID))\r\n\r\n    return this.uploadFiles(filesToUpload)\r\n      .then(() => null)\r\n  }\r\n\r\n  install () {\r\n    this.uppy.setState({\r\n      capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n        resumableUploads: true\r\n      })\r\n    })\r\n    this.uppy.addUploader(this.handleUpload)\r\n\r\n    this.uppy.on('reset-progress', this.handleResetProgress)\r\n\r\n    if (this.opts.autoRetry) {\r\n      this.uppy.on('back-online', this.uppy.retryAll)\r\n    }\r\n  }\r\n\r\n  uninstall () {\r\n    this.uppy.setState({\r\n      capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n        resumableUploads: false\r\n      })\r\n    })\r\n    this.uppy.removeUploader(this.handleUpload)\r\n\r\n    if (this.opts.autoRetry) {\r\n      this.uppy.off('back-online', this.uppy.retryAll)\r\n    }\r\n  }\r\n}\r\n"]}