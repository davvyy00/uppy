{"version":3,"sources":["../../../src/plugins/Url/UrlUI.js"],"names":["require","h","Component","UrlUI","props","handleKeyPress","bind","handleClick","componentDidMount","input","value","setTimeout","focus","preventScroll","ev","keyCode","addFile","render","i18n","module","exports"],"mappings":";;;;;;eAAyBA,QAAQ,QAAR,C;IAAjBC,C,YAAAA,C;IAAGC,S,YAAAA,S;;IAELC,K;;;AACJ,iBAAaC,KAAb,EAAoB;AAAA;;AAAA,iDAClB,sBAAMA,KAAN,CADkB;;AAElB,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,OAAtB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,OAAnB;AAHkB;AAInB;;kBAEDE,iB,gCAAqB;AAAA;;AACnB,SAAKC,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AACA;AACA;AACA;AACAC,eAAW,YAAM;AACf,UAAI,CAAC,OAAKF,KAAV,EAAiB;AACjB,aAAKA,KAAL,CAAWG,KAAX,CAAiB,EAAEC,eAAe,IAAjB,EAAjB;AACD,KAHD,EAGG,GAHH;AAID,G;;kBAEDR,c,2BAAgBS,E,EAAI;AAClB,QAAIA,GAAGC,OAAH,KAAe,EAAnB,EAAuB;AACrB,WAAKX,KAAL,CAAWY,OAAX,CAAmB,KAAKP,KAAL,CAAWC,KAA9B;AACD;AACF,G;;kBAEDH,W,0BAAe;AACb,SAAKH,KAAL,CAAWY,OAAX,CAAmB,KAAKP,KAAL,CAAWC,KAA9B;AACD,G;;kBAEDO,M,qBAAU;AAAA;;AACR,WAAO;AAAA;AAAA,QAAK,SAAM,UAAX;AACL;AACE,iBAAM,iCADR;AAEE,cAAK,MAFP;AAGE,qBAAa,KAAKb,KAAL,CAAWc,IAAX,CAAgB,kBAAhB,CAHf;AAIE,iBAAS,KAAKb,cAJhB;AAKE,aAAK,aAACI,KAAD,EAAW;AAAE,iBAAKA,KAAL,GAAaA,KAAb;AAAoB,SALxC,GADK;AAOL;AAAA;AAAA;AACE,mBAAM,kEADR;AAEE,gBAAK,QAFP;AAGE,wBAAY,KAAKL,KAAL,CAAWc,IAAX,CAAgB,QAAhB,CAHd;AAIE,mBAAS,KAAKX,WAJhB;AAKG,aAAKH,KAAL,CAAWc,IAAX,CAAgB,QAAhB;AALH;AAPK,KAAP;AAeD,G;;;EA5CiBhB,S;;AA+CpBiB,OAAOC,OAAP,GAAiBjB,KAAjB","file":"UrlUI.js","sourcesContent":["const { h, Component } = require('preact')\r\n\r\nclass UrlUI extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.handleKeyPress = this.handleKeyPress.bind(this)\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.input.value = ''\r\n    // My guess about why browser scrolls to top on focus:\r\n    // Component is mounted right away, but the tab panel might be animating\r\n    // still, so input element is positioned outside viewport. This fixes it.\r\n    setTimeout(() => {\r\n      if (!this.input) return\r\n      this.input.focus({ preventScroll: true })\r\n    }, 150)\r\n  }\r\n\r\n  handleKeyPress (ev) {\r\n    if (ev.keyCode === 13) {\r\n      this.props.addFile(this.input.value)\r\n    }\r\n  }\r\n\r\n  handleClick () {\r\n    this.props.addFile(this.input.value)\r\n  }\r\n\r\n  render () {\r\n    return <div class=\"uppy-Url\">\r\n      <input\r\n        class=\"uppy-c-textInput uppy-Url-input\"\r\n        type=\"text\"\r\n        placeholder={this.props.i18n('enterUrlToImport')}\r\n        onkeyup={this.handleKeyPress}\r\n        ref={(input) => { this.input = input }} />\r\n      <button\r\n        class=\"uppy-u-reset uppy-c-btn uppy-c-btn-primary uppy-Url-importButton\"\r\n        type=\"button\"\r\n        aria-label={this.props.i18n('import')}\r\n        onclick={this.handleClick}>\r\n        {this.props.i18n('import')}\r\n      </button>\r\n    </div>\r\n  }\r\n}\r\n\r\nmodule.exports = UrlUI\r\n"]}