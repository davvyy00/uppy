{"version":3,"sources":["../../../src/plugins/DragDrop/index.js"],"names":["Plugin","require","Translator","toArray","dragDrop","h","module","exports","uppy","opts","type","id","title","defaultLocale","strings","dropHereOr","browse","defaultOpts","target","inputName","width","height","note","locale","isDragDropSupported","checkDragDropSupport","translator","i18n","translate","bind","i18nArray","translateArray","handleDrop","handleInputChange","render","div","document","createElement","window","files","log","forEach","file","addFile","source","name","data","err","ev","state","hiddenInputStyle","opacity","overflow","position","zIndex","DragDropClass","DragDropStyle","restrictions","maxNumberOfFiles","allowedFileTypes","input","install","mount","removeDragDropListener","el","uninstall","unmount"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\r\nconst Translator = require('../../core/Translator')\r\nconst toArray = require('../../utils/toArray')\r\nconst dragDrop = require('drag-drop')\r\nconst { h } = require('preact')\r\n\r\n/**\r\n * Drag & Drop plugin\r\n *\r\n */\r\nmodule.exports = class DragDrop extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'acquirer'\r\n    this.id = this.opts.id || 'DragDrop'\r\n    this.title = 'Drag & Drop'\r\n\r\n    const defaultLocale = {\r\n      strings: {\r\n        dropHereOr: 'Drop files here or %{browse}',\r\n        browse: 'browse'\r\n      }\r\n    }\r\n\r\n    // Default options\r\n    const defaultOpts = {\r\n      target: null,\r\n      inputName: 'files[]',\r\n      width: '100%',\r\n      height: '100%',\r\n      note: null,\r\n      locale: defaultLocale\r\n    }\r\n\r\n    // Merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOpts, opts)\r\n\r\n    // Check for browser dragDrop support\r\n    this.isDragDropSupported = this.checkDragDropSupport()\r\n\r\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\r\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\r\n\r\n    // i18n\r\n    this.translator = new Translator({locale: this.locale})\r\n    this.i18n = this.translator.translate.bind(this.translator)\r\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\r\n\r\n    // Bind `this` to class methods\r\n    this.handleDrop = this.handleDrop.bind(this)\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.checkDragDropSupport = this.checkDragDropSupport.bind(this)\r\n    this.render = this.render.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Checks if the browser supports Drag & Drop (not supported on mobile devices, for example).\r\n   * @return {Boolean}\r\n   */\r\n  checkDragDropSupport () {\r\n    const div = document.createElement('div')\r\n\r\n    if (!('draggable' in div) || !('ondragstart' in div && 'ondrop' in div)) {\r\n      return false\r\n    }\r\n\r\n    if (!('FormData' in window)) {\r\n      return false\r\n    }\r\n\r\n    if (!('FileReader' in window)) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  handleDrop (files) {\r\n    this.uppy.log('[DragDrop] Files dropped')\r\n\r\n    files.forEach((file) => {\r\n      try {\r\n        this.uppy.addFile({\r\n          source: this.id,\r\n          name: file.name,\r\n          type: file.type,\r\n          data: file\r\n        })\r\n      } catch (err) {\r\n        // Nothing, restriction errors handled in Core\r\n      }\r\n    })\r\n  }\r\n\r\n  handleInputChange (ev) {\r\n    this.uppy.log('[DragDrop] Files selected through input')\r\n\r\n    const files = toArray(ev.target.files)\r\n\r\n    files.forEach((file) => {\r\n      try {\r\n        this.uppy.addFile({\r\n          source: this.id,\r\n          name: file.name,\r\n          type: file.type,\r\n          data: file\r\n        })\r\n      } catch (err) {\r\n        // Nothing, restriction errors handled in Core\r\n      }\r\n    })\r\n  }\r\n\r\n  render (state) {\r\n    /* http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/ */\r\n    const hiddenInputStyle = {\r\n      width: '0.1px',\r\n      height: '0.1px',\r\n      opacity: 0,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      zIndex: -1\r\n    }\r\n    const DragDropClass = `uppy-Root uppy-DragDrop-container ${this.isDragDropSupported ? 'uppy-DragDrop--is-dragdrop-supported' : ''}`\r\n    const DragDropStyle = {\r\n      width: this.opts.width,\r\n      height: this.opts.height\r\n    }\r\n    const restrictions = this.uppy.opts.restrictions\r\n\r\n    // empty value=\"\" on file input, so that the input is cleared after a file is selected,\r\n    // because Uppy will be handling the upload and so we can select same file\r\n    // after removing — otherwise browser thinks it’s already selected\r\n    return (\r\n      <div class={DragDropClass} style={DragDropStyle}>\r\n        <div class=\"uppy-DragDrop-inner\">\r\n          <svg aria-hidden=\"true\" class=\"UppyIcon uppy-DragDrop-arrow\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M11 10V0H5v10H2l6 6 6-6h-3zm0 0\" fill-rule=\"evenodd\" />\r\n          </svg>\r\n          <label class=\"uppy-DragDrop-label\">\r\n            <input style={hiddenInputStyle}\r\n              class=\"uppy-DragDrop-input\"\r\n              type=\"file\"\r\n              name={this.opts.inputName}\r\n              multiple={restrictions.maxNumberOfFiles !== 1}\r\n              accept={restrictions.allowedFileTypes}\r\n              ref={(input) => {\r\n                this.input = input\r\n              }}\r\n              onchange={this.handleInputChange}\r\n              value=\"\" />\r\n            {this.i18nArray('dropHereOr', {\r\n              browse: <span class=\"uppy-DragDrop-dragText\">{this.i18n('browse')}</span>\r\n            })}\r\n          </label>\r\n          <span class=\"uppy-DragDrop-note\">{this.opts.note}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  install () {\r\n    const target = this.opts.target\r\n    if (target) {\r\n      this.mount(target, this)\r\n    }\r\n    this.removeDragDropListener = dragDrop(this.el, (files) => {\r\n      this.handleDrop(files)\r\n      this.uppy.log(files)\r\n    })\r\n  }\r\n\r\n  uninstall () {\r\n    this.unmount()\r\n    this.removeDragDropListener()\r\n  }\r\n}\r\n"]}