{"version":3,"sources":["../../src/plugins/FileInput.js"],"names":["Plugin","require","toArray","Translator","h","module","exports","uppy","opts","id","title","type","defaultLocale","strings","chooseFiles","defaultOptions","target","pretty","inputName","locale","translator","i18n","translate","bind","render","handleInputChange","handleClick","ev","log","files","forEach","file","addFile","source","name","data","err","input","click","state","hiddenInputStyle","width","height","opacity","overflow","position","zIndex","restrictions","maxNumberOfFiles","allowedFileTypes","install","mount","uninstall","unmount"],"mappings":"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","file":"FileInput.js","sourcesContent":["const Plugin = require('../core/Plugin')\r\nconst toArray = require('../utils/toArray')\r\nconst Translator = require('../core/Translator')\r\nconst { h } = require('preact')\r\n\r\nmodule.exports = class FileInput extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.id = this.opts.id || 'FileInput'\r\n    this.title = 'File Input'\r\n    this.type = 'acquirer'\r\n\r\n    const defaultLocale = {\r\n      strings: {\r\n        chooseFiles: 'Choose files'\r\n      }\r\n    }\r\n\r\n    // Default options\r\n    const defaultOptions = {\r\n      target: null,\r\n      pretty: true,\r\n      inputName: 'files[]',\r\n      locale: defaultLocale\r\n    }\r\n\r\n    // Merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n\r\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\r\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\r\n\r\n    // i18n\r\n    this.translator = new Translator({locale: this.locale})\r\n    this.i18n = this.translator.translate.bind(this.translator)\r\n\r\n    this.render = this.render.bind(this)\r\n    this.handleInputChange = this.handleInputChange.bind(this)\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleInputChange (ev) {\r\n    this.uppy.log('[FileInput] Something selected through input...')\r\n\r\n    const files = toArray(ev.target.files)\r\n\r\n    files.forEach((file) => {\r\n      try {\r\n        this.uppy.addFile({\r\n          source: this.id,\r\n          name: file.name,\r\n          type: file.type,\r\n          data: file\r\n        })\r\n      } catch (err) {\r\n        // Nothing, restriction errors handled in Core\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClick (ev) {\r\n    this.input.click()\r\n  }\r\n\r\n  render (state) {\r\n    /* http://tympanus.net/codrops/2015/09/15/styling-customizing-file-inputs-smart-way/ */\r\n    const hiddenInputStyle = {\r\n      width: '0.1px',\r\n      height: '0.1px',\r\n      opacity: 0,\r\n      overflow: 'hidden',\r\n      position: 'absolute',\r\n      zIndex: -1\r\n    }\r\n\r\n    const restrictions = this.uppy.opts.restrictions\r\n\r\n    // empty value=\"\" on file input, so that the input is cleared after a file is selected,\r\n    // because Uppy will be handling the upload and so we can select same file\r\n    // after removing — otherwise browser thinks it’s already selected\r\n    return <div class=\"uppy-Root uppy-FileInput-container\">\r\n      <input class=\"uppy-FileInput-input\"\r\n        style={this.opts.pretty && hiddenInputStyle}\r\n        type=\"file\"\r\n        name={this.opts.inputName}\r\n        onchange={this.handleInputChange}\r\n        multiple={restrictions.maxNumberOfFiles !== 1}\r\n        accept={restrictions.allowedFileTypes}\r\n        ref={(input) => { this.input = input }}\r\n        value=\"\" />\r\n      {this.opts.pretty &&\r\n        <button class=\"uppy-FileInput-btn\" type=\"button\" onclick={this.handleClick}>\r\n          {this.i18n('chooseFiles')}\r\n        </button>\r\n      }\r\n    </div>\r\n  }\r\n\r\n  install () {\r\n    const target = this.opts.target\r\n    if (target) {\r\n      this.mount(target, this)\r\n    }\r\n  }\r\n\r\n  uninstall () {\r\n    this.unmount()\r\n  }\r\n}\r\n"]}