{"version":3,"sources":["../../../src/plugins/ThumbnailGenerator/index.test.js"],"names":["ThumbnailGeneratorPlugin","require","Plugin","emitter","delay","setTimeout","resolve","duration","describe","it","plugin","expect","toEqual","plugin1","opts","thumbnailWidth","plugin2","core","on","jest","fn","addToQueue","install","toHaveBeenCalledTimes","toHaveBeenCalledWith","off","uninstall","processQueue","file","foo","queueProcessing","queue","file2","requestThumbnail","file1","file3","then","createThumbnail","mockReturnValue","setPreviewURL","id","type","isRemote","state","files","preview","setFileState","getProportionalHeight","width","height","canvas","toBlob","canvasToBlob","mock","calls","originalDocumentCreateElement","originalURLCreateObjectURL","beforeEach","document","createElement","URL","createObjectURL","afterEach","xit","image","context","drawImage","getContext","result","downScaleInSteps","newImage","sourceWidth","sourceHeight","resizeImage","a","isRestored","b","c","getState","getFile","emit","not","toHaveBeenCalled"],"mappings":"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","file":"index.test.js","sourcesContent":["const ThumbnailGeneratorPlugin = require('./index')\r\nconst Plugin = require('../../core/Plugin')\r\nconst emitter = require('namespace-emitter')\r\n\r\nconst delay = duration => new Promise(resolve => setTimeout(resolve, duration))\r\n\r\ndescribe('uploader/ThumbnailGeneratorPlugin', () => {\r\n  it('should initialise successfully', () => {\r\n    const plugin = new ThumbnailGeneratorPlugin(null, {})\r\n    expect(plugin instanceof Plugin).toEqual(true)\r\n  })\r\n\r\n  it('should accept the thumbnailWidth option and override the default', () => {\r\n    const plugin1 = new ThumbnailGeneratorPlugin(null) // eslint-disable-line no-new\r\n    expect(plugin1.opts.thumbnailWidth).toEqual(200)\r\n\r\n    const plugin2 = new ThumbnailGeneratorPlugin(null, { thumbnailWidth: 100 }) // eslint-disable-line no-new\r\n    expect(plugin2.opts.thumbnailWidth).toEqual(100)\r\n  })\r\n\r\n  describe('install', () => {\r\n    it('should subscribe to uppy file-added event', () => {\r\n      const core = {\r\n        on: jest.fn()\r\n      }\r\n\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.addToQueue = jest.fn()\r\n      plugin.install()\r\n\r\n      expect(core.on).toHaveBeenCalledTimes(2)\r\n      expect(core.on).toHaveBeenCalledWith('file-added', plugin.addToQueue)\r\n    })\r\n  })\r\n\r\n  describe('uninstall', () => {\r\n    it('should unsubscribe from uppy file-added event', () => {\r\n      const core = {\r\n        on: jest.fn(),\r\n        off: jest.fn()\r\n      }\r\n\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.addToQueue = jest.fn()\r\n      plugin.install()\r\n\r\n      expect(core.on).toHaveBeenCalledTimes(2)\r\n\r\n      plugin.uninstall()\r\n\r\n      expect(core.off).toHaveBeenCalledTimes(2)\r\n      expect(core.off).toHaveBeenCalledWith('file-added', plugin.addToQueue)\r\n    })\r\n  })\r\n\r\n  describe('queue', () => {\r\n    it('should add a new file to the queue and start processing the queue when queueProcessing is false', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.processQueue = jest.fn()\r\n\r\n      const file = { foo: 'bar' }\r\n      plugin.queueProcessing = false\r\n      plugin.addToQueue(file)\r\n      expect(plugin.queue).toEqual([{ foo: 'bar' }])\r\n      expect(plugin.processQueue).toHaveBeenCalledTimes(1)\r\n\r\n      const file2 = { foo: 'bar2' }\r\n      plugin.queueProcessing = true\r\n      plugin.addToQueue(file2)\r\n      expect(plugin.queue).toEqual([{ foo: 'bar' }, { foo: 'bar2' }])\r\n      expect(plugin.processQueue).toHaveBeenCalledTimes(1)\r\n    })\r\n\r\n    it('should process items in the queue one by one', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n\r\n      plugin.requestThumbnail = jest.fn(() => delay(100))\r\n\r\n      const file1 = { foo: 'bar' }\r\n      const file2 = { foo: 'bar2' }\r\n      const file3 = { foo: 'bar3' }\r\n      plugin.addToQueue(file1)\r\n      plugin.addToQueue(file2)\r\n      plugin.addToQueue(file3)\r\n\r\n      expect(plugin.requestThumbnail).toHaveBeenCalledTimes(1)\r\n      expect(plugin.requestThumbnail).toHaveBeenCalledWith(file1)\r\n\r\n      return delay(110)\r\n        .then(() => {\r\n          expect(plugin.requestThumbnail).toHaveBeenCalledTimes(2)\r\n          expect(plugin.requestThumbnail).toHaveBeenCalledWith(file2)\r\n          return delay(110)\r\n        })\r\n        .then(() => {\r\n          expect(plugin.requestThumbnail).toHaveBeenCalledTimes(3)\r\n          expect(plugin.requestThumbnail).toHaveBeenCalledWith(file3)\r\n          return delay(110)\r\n        })\r\n        .then(() => {\r\n          expect(plugin.queue).toEqual([])\r\n          expect(plugin.queueProcessing).toEqual(false)\r\n        })\r\n    })\r\n  })\r\n\r\n  describe('requestThumbnail', () => {\r\n    it('should call createThumbnail if it is a supported filetype', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n\r\n      plugin.createThumbnail = jest\r\n        .fn()\r\n        .mockReturnValue(Promise.resolve('preview'))\r\n      plugin.setPreviewURL = jest.fn()\r\n\r\n      const file = { id: 'file1', type: 'image/png', isRemote: false }\r\n      return plugin.requestThumbnail(file).then(() => {\r\n        expect(plugin.createThumbnail).toHaveBeenCalledTimes(1)\r\n        expect(plugin.createThumbnail).toHaveBeenCalledWith(\r\n          file,\r\n          plugin.opts.thumbnailWidth\r\n        )\r\n      })\r\n    })\r\n\r\n    it('should not call createThumbnail if it is not a supported filetype', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n\r\n      plugin.createThumbnail = jest\r\n        .fn()\r\n        .mockReturnValue(Promise.resolve('preview'))\r\n      plugin.setPreviewURL = jest.fn()\r\n\r\n      const file = { id: 'file1', type: 'text/html', isRemote: false }\r\n      return plugin.requestThumbnail(file).then(() => {\r\n        expect(plugin.createThumbnail).toHaveBeenCalledTimes(0)\r\n      })\r\n    })\r\n\r\n    it('should not call createThumbnail if the file is remote', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n\r\n      plugin.createThumbnail = jest\r\n        .fn()\r\n        .mockReturnValue(Promise.resolve('preview'))\r\n      plugin.setPreviewURL = jest.fn()\r\n\r\n      const file = { id: 'file1', type: 'image/png', isRemote: true }\r\n      return plugin.requestThumbnail(file).then(() => {\r\n        expect(plugin.createThumbnail).toHaveBeenCalledTimes(0)\r\n      })\r\n    })\r\n\r\n    it('should call setPreviewURL with the thumbnail image', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n\r\n      plugin.createThumbnail = jest\r\n        .fn()\r\n        .mockReturnValue(Promise.resolve('preview'))\r\n      plugin.setPreviewURL = jest.fn()\r\n\r\n      const file = { id: 'file1', type: 'image/png', isRemote: false }\r\n      return plugin.requestThumbnail(file).then(() => {\r\n        expect(plugin.setPreviewURL).toHaveBeenCalledTimes(1)\r\n        expect(plugin.setPreviewURL).toHaveBeenCalledWith('file1', 'preview')\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('setPreviewURL', () => {\r\n    it('should update the preview url for the specified image', () => {\r\n      const core = {\r\n        state: {\r\n          files: {\r\n            file1: {\r\n              preview: 'foo'\r\n            },\r\n            file2: {\r\n              preview: 'boo'\r\n            }\r\n          }\r\n        },\r\n        setFileState: jest.fn()\r\n      }\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.setPreviewURL('file1', 'moo')\r\n      expect(core.setFileState).toHaveBeenCalledTimes(1)\r\n      expect(core.setFileState).toHaveBeenCalledWith('file1', {\r\n        preview: 'moo'\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('getProportionalHeight', () => {\r\n    it('should calculate the resized height based on the specified width of the image whilst keeping aspect ratio', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      expect(\r\n        plugin.getProportionalHeight({ width: 200, height: 100 }, 50)\r\n      ).toEqual(25)\r\n      expect(\r\n        plugin.getProportionalHeight({ width: 66, height: 66 }, 33)\r\n      ).toEqual(33)\r\n      expect(\r\n        plugin.getProportionalHeight({ width: 201.2, height: 198.2 }, 47)\r\n      ).toEqual(46)\r\n    })\r\n  })\r\n\r\n  describe('canvasToBlob', () => {\r\n    it('should use canvas.toBlob if available', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      const canvas = {\r\n        toBlob: jest.fn()\r\n      }\r\n      plugin.canvasToBlob(canvas, 'type', 90)\r\n      expect(canvas.toBlob).toHaveBeenCalledTimes(1)\r\n      expect(canvas.toBlob.mock.calls[0][1]).toEqual('type')\r\n      expect(canvas.toBlob.mock.calls[0][2]).toEqual(90)\r\n    })\r\n  })\r\n\r\n  describe('downScaleInSteps', () => {\r\n    let originalDocumentCreateElement\r\n    let originalURLCreateObjectURL\r\n\r\n    beforeEach(() => {\r\n      originalDocumentCreateElement = document.createElement\r\n      originalURLCreateObjectURL = URL.createObjectURL\r\n    })\r\n\r\n    afterEach(() => {\r\n      document.createElement = originalDocumentCreateElement\r\n      URL.createObjectURL = originalURLCreateObjectURL\r\n    })\r\n\r\n    xit('should scale down the image by the specified number of steps', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      const image = {\r\n        width: 1000,\r\n        height: 800\r\n      }\r\n      const context = {\r\n        drawImage: jest.fn()\r\n      }\r\n      const canvas = {\r\n        width: 0,\r\n        height: 0,\r\n        getContext: jest.fn().mockReturnValue(context)\r\n      }\r\n      document.createElement = jest.fn().mockReturnValue(canvas)\r\n      const result = plugin.downScaleInSteps(image, 3)\r\n      const newImage = {\r\n        getContext: canvas.getContext,\r\n        height: 100,\r\n        width: 125\r\n      }\r\n      expect(result).toEqual({\r\n        image: newImage,\r\n        sourceWidth: 125,\r\n        sourceHeight: 100\r\n      })\r\n      expect(context.drawImage).toHaveBeenCalledTimes(3)\r\n      expect(context.drawImage.mock.calls).toEqual([\r\n        [{ width: 1000, height: 800 }, 0, 0, 1000, 800, 0, 0, 500, 400],\r\n        [\r\n          { width: 125, height: 100, getContext: canvas.getContext },\r\n          0,\r\n          0,\r\n          500,\r\n          400,\r\n          0,\r\n          0,\r\n          250,\r\n          200\r\n        ],\r\n        [\r\n          { width: 125, height: 100, getContext: canvas.getContext },\r\n          0,\r\n          0,\r\n          250,\r\n          200,\r\n          0,\r\n          0,\r\n          125,\r\n          100\r\n        ]\r\n      ])\r\n    })\r\n  })\r\n\r\n  describe('resizeImage', () => {\r\n    it('should return a canvas with the resized image on it', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      const image = {\r\n        width: 1000,\r\n        height: 800\r\n      }\r\n      const context = {\r\n        drawImage: jest.fn()\r\n      }\r\n      const canvas = {\r\n        width: 0,\r\n        height: 0,\r\n        getContext: jest.fn().mockReturnValue(context)\r\n      }\r\n      document.createElement = jest.fn().mockReturnValue(canvas)\r\n\r\n      const result = plugin.resizeImage(image, 200, 160)\r\n      expect(result).toEqual({\r\n        width: 200,\r\n        height: 160,\r\n        getContext: canvas.getContext\r\n      })\r\n    })\r\n\r\n    it('should upsize if original image is smaller than target size', () => {\r\n      const core = {}\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      const image = {\r\n        width: 100,\r\n        height: 80\r\n      }\r\n      const context = {\r\n        drawImage: jest.fn()\r\n      }\r\n      const canvas = {\r\n        width: 0,\r\n        height: 0,\r\n        getContext: jest.fn().mockReturnValue(context)\r\n      }\r\n      document.createElement = jest.fn().mockReturnValue(canvas)\r\n\r\n      const result = plugin.resizeImage(image, 200, 160)\r\n      expect(result).toEqual({\r\n        width: 200,\r\n        height: 160,\r\n        getContext: canvas.getContext\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('onRestored', () => {\r\n    it('should enqueue restored files', () => {\r\n      const files = {\r\n        a: { preview: 'blob:abc', isRestored: true },\r\n        b: { preview: 'blob:def' },\r\n        c: { preview: 'blob:xyz', isRestored: true }\r\n      }\r\n      const core = Object.assign(emitter(), {\r\n        getState () {\r\n          return { files }\r\n        },\r\n        getFile (id) {\r\n          return files[id]\r\n        }\r\n      })\r\n\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.addToQueue = jest.fn()\r\n      plugin.install()\r\n\r\n      core.emit('restored')\r\n\r\n      expect(plugin.addToQueue).toHaveBeenCalledTimes(2)\r\n      expect(plugin.addToQueue).toHaveBeenCalledWith(files.a)\r\n      expect(plugin.addToQueue).toHaveBeenCalledWith(files.c)\r\n    })\r\n\r\n    it('should not regenerate thumbnail for remote files', () => {\r\n      const files = {\r\n        a: { preview: 'http://abc', isRestored: true }\r\n      }\r\n      const core = Object.assign(emitter(), {\r\n        getState () {\r\n          return { files }\r\n        },\r\n        getFile (id) {\r\n          return files[id]\r\n        }\r\n      })\r\n\r\n      const plugin = new ThumbnailGeneratorPlugin(core)\r\n      plugin.addToQueue = jest.fn()\r\n      plugin.install()\r\n\r\n      core.emit('restored')\r\n\r\n      expect(plugin.addToQueue).not.toHaveBeenCalled()\r\n    })\r\n  })\r\n})\r\n"]}