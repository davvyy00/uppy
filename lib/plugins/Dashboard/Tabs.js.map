{"version":3,"sources":["../../../src/plugins/Dashboard/Tabs.js"],"names":["ActionBrowseTagline","require","localIcon","h","Component","Tabs","props","handleClick","bind","ev","input","click","render","isHidden","Object","keys","files","length","hasAcquirers","acquirers","handleInputChange","i18n","i18nArray","maxNumberOfFiles","allowedFileTypes","map","target","id","activePanel","showPanel","icon","name","module","exports"],"mappings":";;;;;;AAAA,IAAMA,sBAAsBC,QAAQ,uBAAR,CAA5B;;eACsBA,QAAQ,SAAR,C;IAAdC,S,YAAAA,S;;gBACiBD,QAAQ,QAAR,C;IAAjBE,C,aAAAA,C;IAAGC,S,aAAAA,S;;IAELC,I;;;AACJ,gBAAaC,KAAb,EAAoB;AAAA;;AAAA,iDAClB,sBAAMA,KAAN,CADkB;;AAElB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAFkB;AAGnB;;iBAEDD,W,wBAAaE,E,EAAI;AACf,SAAKC,KAAL,CAAWC,KAAX;AACD,G;;iBAEDC,M,qBAAU;AAAA;;AACR,QAAMC,WAAWC,OAAOC,IAAP,CAAY,KAAKT,KAAL,CAAWU,KAAvB,EAA8BC,MAA9B,KAAyC,CAA1D;AACA,QAAMC,eAAe,KAAKZ,KAAL,CAAWa,SAAX,CAAqBF,MAArB,KAAgC,CAArD;;AAEA,QAAI,CAACC,YAAL,EAAmB;AACjB,aACE;AAAA;AAAA,UAAK,SAAM,oBAAX,EAAgC,eAAaL,QAA7C;AACE;AAAA;AAAA,YAAK,SAAM,0BAAX;AACE,YAAC,mBAAD;AACE,uBAAW,KAAKP,KAAL,CAAWa,SADxB;AAEE,+BAAmB,KAAKb,KAAL,CAAWc,iBAFhC;AAGE,kBAAM,KAAKd,KAAL,CAAWe,IAHnB;AAIE,uBAAW,KAAKf,KAAL,CAAWgB,SAJxB;AADF;AADF,OADF;AAWD;;AAED;AACA;AACA;AACA,WAAO;AAAA;AAAA,QAAK,SAAM,oBAAX;AACL;AAAA;AAAA,UAAI,SAAM,yBAAV,EAAoC,MAAK,SAAzC;AACE;AAAA;AAAA,YAAI,SAAM,mBAAV,EAA8B,MAAK,cAAnC;AACE;AAAA;AAAA,cAAQ,MAAK,QAAb;AACE,uBAAM,uBADR;AAEE,oBAAK,KAFP;AAGE,wBAAU,CAHZ;AAIE,uBAAS,KAAKf,WAJhB;AAKGL,uBALH;AAME;AAAA;AAAA,gBAAK,SAAM,wBAAX;AAAqC,mBAAKI,KAAL,CAAWe,IAAX,CAAgB,UAAhB;AAArC;AANF,WADF;AASE,uBAAO,SAAM,sBAAb;AACE,wBADF;AAEE,2BAAY,MAFd;AAGE,sBAAU,CAAC,CAHb;AAIE,kBAAK,MAJP;AAKE,kBAAK,SALP;AAME,sBAAU,KAAKf,KAAL,CAAWiB,gBAAX,KAAgC,CAN5C;AAOE,oBAAQ,KAAKjB,KAAL,CAAWkB,gBAPrB;AAQE,sBAAU,KAAKlB,KAAL,CAAWc,iBARvB;AASE,mBAAM,EATR;AAUE,iBAAK,aAACV,KAAD,EAAW;AAAE,qBAAKA,KAAL,GAAaA,KAAb;AAAoB,aAVxC;AATF,SADF;AAsBG,aAAKJ,KAAL,CAAWa,SAAX,CAAqBM,GAArB,CAAyB,UAACC,MAAD,EAAY;AACpC,iBAAO;AAAA;AAAA,cAAI,SAAM,mBAAV,EAA8B,MAAK,cAAnC;AACL;AAAA;AAAA,gBAAQ,SAAM,uBAAd;AACE,sBAAK,QADP;AAEE,sBAAK,KAFP;AAGE,0BAAU,CAHZ;AAIE,mEAA+CA,OAAOC,EAJxD;AAKE,iCAAe,OAAKrB,KAAL,CAAWsB,WAAX,CAAuBD,EAAvB,KAA8BD,OAAOC,EALtD;AAME,yBAAS;AAAA,yBAAM,OAAKrB,KAAL,CAAWuB,SAAX,CAAqBH,OAAOC,EAA5B,CAAN;AAAA,iBANX;AAOGD,qBAAOI,IAAP,EAPH;AAQE;AAAA;AAAA,kBAAK,SAAM,wBAAX;AAAqCJ,uBAAOK;AAA5C;AARF;AADK,WAAP;AAYD,SAbA;AAtBH;AADK,KAAP;AAuCD,G;;;EAtEgB3B,S;;AAyEnB4B,OAAOC,OAAP,GAAiB5B,IAAjB","file":"Tabs.js","sourcesContent":["const ActionBrowseTagline = require('./ActionBrowseTagline')\r\nconst { localIcon } = require('./icons')\r\nconst { h, Component } = require('preact')\r\n\r\nclass Tabs extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleClick (ev) {\r\n    this.input.click()\r\n  }\r\n\r\n  render () {\r\n    const isHidden = Object.keys(this.props.files).length === 0\r\n    const hasAcquirers = this.props.acquirers.length !== 0\r\n\r\n    if (!hasAcquirers) {\r\n      return (\r\n        <div class=\"uppy-DashboardTabs\" aria-hidden={isHidden}>\r\n          <div class=\"uppy-DashboardTabs-title\">\r\n            <ActionBrowseTagline\r\n              acquirers={this.props.acquirers}\r\n              handleInputChange={this.props.handleInputChange}\r\n              i18n={this.props.i18n}\r\n              i18nArray={this.props.i18nArray} />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    // empty value=\"\" on file input, so that the input is cleared after a file is selected,\r\n    // because Uppy will be handling the upload and so we can select same file\r\n    // after removing — otherwise browser thinks it’s already selected\r\n    return <div class=\"uppy-DashboardTabs\">\r\n      <ul class=\"uppy-DashboardTabs-list\" role=\"tablist\">\r\n        <li class=\"uppy-DashboardTab\" role=\"presentation\">\r\n          <button type=\"button\"\r\n            class=\"uppy-DashboardTab-btn\"\r\n            role=\"tab\"\r\n            tabindex={0}\r\n            onclick={this.handleClick}>\r\n            {localIcon()}\r\n            <div class=\"uppy-DashboardTab-name\">{this.props.i18n('myDevice')}</div>\r\n          </button>\r\n          <input class=\"uppy-Dashboard-input\"\r\n            hidden\r\n            aria-hidden=\"true\"\r\n            tabindex={-1}\r\n            type=\"file\"\r\n            name=\"files[]\"\r\n            multiple={this.props.maxNumberOfFiles !== 1}\r\n            accept={this.props.allowedFileTypes}\r\n            onchange={this.props.handleInputChange}\r\n            value=\"\"\r\n            ref={(input) => { this.input = input }} />\r\n        </li>\r\n        {this.props.acquirers.map((target) => {\r\n          return <li class=\"uppy-DashboardTab\" role=\"presentation\">\r\n            <button class=\"uppy-DashboardTab-btn\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              tabindex={0}\r\n              aria-controls={`uppy-DashboardContent-panel--${target.id}`}\r\n              aria-selected={this.props.activePanel.id === target.id}\r\n              onclick={() => this.props.showPanel(target.id)}>\r\n              {target.icon()}\r\n              <div class=\"uppy-DashboardTab-name\">{target.name}</div>\r\n            </button>\r\n          </li>\r\n        })}\r\n      </ul>\r\n    </div>\r\n  }\r\n}\r\n\r\nmodule.exports = Tabs\r\n"]}