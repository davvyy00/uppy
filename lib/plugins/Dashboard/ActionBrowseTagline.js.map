{"version":3,"sources":["../../../src/plugins/Dashboard/ActionBrowseTagline.js"],"names":["require","h","Component","ActionBrowseTagline","props","handleClick","bind","ev","input","click","render","browse","i18n","acquirers","length","i18nArray","maxNumberOfFiles","handleInputChange","allowedFileTypes","module","exports"],"mappings":";;;;;;eAAyBA,QAAQ,QAAR,C;IAAjBC,C,YAAAA,C;IAAGC,S,YAAAA,S;;IAELC,mB;;;AACJ,+BAAaC,KAAb,EAAoB;AAAA;;AAAA,iDAClB,sBAAMA,KAAN,CADkB;;AAElB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AAFkB;AAGnB;;gCAEDD,W,wBAAaE,E,EAAI;AACf,SAAKC,KAAL,CAAWC,KAAX;AACD,G;;gCAEDC,M,qBAAU;AAAA;;AACR,QAAMC,SACJ;AAAA;AAAA,QAAQ,MAAK,QAAb,EAAsB,SAAM,uBAA5B,EAAoD,SAAS,KAAKN,WAAlE;AACG,WAAKD,KAAL,CAAWQ,IAAX,CAAgB,QAAhB;AADH,KADF;;AAMA;AACA;AACA;AACA,WACE;AAAA;AAAA;AACG,WAAKR,KAAL,CAAWS,SAAX,CAAqBC,MAArB,KAAgC,CAAhC,GACG,KAAKV,KAAL,CAAWW,SAAX,CAAqB,WAArB,EAAkC,EAAEJ,cAAF,EAAlC,CADH,GAEG,KAAKP,KAAL,CAAWW,SAAX,CAAqB,iBAArB,EAAwC,EAAEJ,cAAF,EAAxC,CAHN;AAKE,mBAAO,SAAM,sBAAb;AACE,oBADF;AAEE,uBAAY,MAFd;AAGE,kBAAU,CAAC,CAHb;AAIE,cAAK,MAJP;AAKE,cAAK,SALP;AAME,kBAAU,KAAKP,KAAL,CAAWY,gBAAX,KAAgC,CAN5C;AAOE,kBAAU,KAAKZ,KAAL,CAAWa,iBAPvB;AAQE,gBAAQ,KAAKb,KAAL,CAAWc,gBARrB;AASE,eAAM,EATR;AAUE,aAAK,aAACV,KAAD,EAAW;AACd,iBAAKA,KAAL,GAAaA,KAAb;AACD,SAZH;AALF,KADF;AAqBD,G;;;EAzC+BN,S;;AA4ClCiB,OAAOC,OAAP,GAAiBjB,mBAAjB","file":"ActionBrowseTagline.js","sourcesContent":["const { h, Component } = require('preact')\r\n\r\nclass ActionBrowseTagline extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n  handleClick (ev) {\r\n    this.input.click()\r\n  }\r\n\r\n  render () {\r\n    const browse = (\r\n      <button type=\"button\" class=\"uppy-Dashboard-browse\" onclick={this.handleClick}>\r\n        {this.props.i18n('browse')}\r\n      </button>\r\n    )\r\n\r\n    // empty value=\"\" on file input, so that the input is cleared after a file is selected,\r\n    // because Uppy will be handling the upload and so we can select same file\r\n    // after removing — otherwise browser thinks it’s already selected\r\n    return (\r\n      <span>\r\n        {this.props.acquirers.length === 0\r\n          ? this.props.i18nArray('dropPaste', { browse })\r\n          : this.props.i18nArray('dropPasteImport', { browse })\r\n        }\r\n        <input class=\"uppy-Dashboard-input\"\r\n          hidden\r\n          aria-hidden=\"true\"\r\n          tabindex={-1}\r\n          type=\"file\"\r\n          name=\"files[]\"\r\n          multiple={this.props.maxNumberOfFiles !== 1}\r\n          onchange={this.props.handleInputChange}\r\n          accept={this.props.allowedFileTypes}\r\n          value=\"\"\r\n          ref={(input) => {\r\n            this.input = input\r\n          }} />\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nmodule.exports = ActionBrowseTagline\r\n"]}