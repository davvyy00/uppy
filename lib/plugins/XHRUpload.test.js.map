{"version":3,"sources":["../../src/plugins/XHRUpload.test.js"],"names":["nock","require","Core","XHRUpload","describe","it","defaultReplyHeaders","options","reply","post","core","autoProceed","getResponseData","jest","fn","expect","some","toEqual","use","id","endpoint","addFile","name","data","Blob","Buffer","alloc","upload","then","toHaveBeenCalled"],"mappings":"AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,OAAOD,QAAQ,SAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,aAAR,CAAlB;;AAEAG,SAAS,WAAT,EAAsB,YAAM;AAC1BA,WAAS,iBAAT,EAA4B,YAAM;AAChCC,OAAG,yCAAH,EAA8C,YAAM;AAClDL,WAAK,+BAAL,EACGM,mBADH,CACuB;AACnB,uCAA+B,MADZ;AAEnB,uCAA+B;AAFZ,OADvB,EAKGC,OALH,CAKW,GALX,EAKgBC,KALhB,CAKsB,GALtB,EAK2B,EAL3B,EAMGC,IANH,CAMQ,GANR,EAMaD,KANb,CAMmB,GANnB,EAMwB,EANxB;;AAQA,UAAME,OAAO,IAAIR,IAAJ,CAAS,EAAES,aAAa,KAAf,EAAT,CAAb;AACA,UAAMC,kBAAkBC,KAAKC,EAAL,CAAQ,YAAY;AAC1CC,eAAO,KAAKC,IAAZ,EAAkBC,OAAlB,CAA0B,QAA1B;AACA,eAAO,EAAP;AACD,OAHuB,CAAxB;AAIAP,WAAKQ,GAAL,CAASf,SAAT,EAAoB;AAClBgB,YAAI,WADc;AAElBC,kBAAU,+BAFQ;AAGlBJ,cAAM,QAHY;AAIlBJ;AAJkB,OAApB;AAMAF,WAAKW,OAAL,CAAa;AACXC,cAAM,UADK;AAEXC,cAAM,IAAIC,IAAJ,CAAS,CAACC,OAAOC,KAAP,CAAa,IAAb,CAAD,CAAT;AAFK,OAAb;;AAKA,aAAOhB,KAAKiB,MAAL,GAAcC,IAAd,CAAmB,YAAM;AAC9Bb,eAAOH,eAAP,EAAwBiB,gBAAxB;AACD,OAFM,CAAP;AAGD,KA5BD;AA6BD,GA9BD;AA+BD,CAhCD","file":"XHRUpload.test.js","sourcesContent":["const nock = require('nock')\r\nconst Core = require('../core')\r\nconst XHRUpload = require('./XHRUpload')\r\n\r\ndescribe('XHRUpload', () => {\r\n  describe('getResponseData', () => {\r\n    it('has the XHRUpload options as its `this`', () => {\r\n      nock('https://fake-endpoint.uppy.io')\r\n        .defaultReplyHeaders({\r\n          'access-control-allow-method': 'POST',\r\n          'access-control-allow-origin': '*'\r\n        })\r\n        .options('/').reply(200, {})\r\n        .post('/').reply(200, {})\r\n\r\n      const core = new Core({ autoProceed: false })\r\n      const getResponseData = jest.fn(function () {\r\n        expect(this.some).toEqual('option')\r\n        return {}\r\n      })\r\n      core.use(XHRUpload, {\r\n        id: 'XHRUpload',\r\n        endpoint: 'https://fake-endpoint.uppy.io',\r\n        some: 'option',\r\n        getResponseData\r\n      })\r\n      core.addFile({\r\n        name: 'test.jpg',\r\n        data: new Blob([Buffer.alloc(8192)])\r\n      })\r\n\r\n      return core.upload().then(() => {\r\n        expect(getResponseData).toHaveBeenCalled()\r\n      })\r\n    })\r\n  })\r\n})\r\n"]}