{"version":3,"sources":["../../../src/plugins/AwsS3/Multipart.js"],"names":["Plugin","require","RequestClient","UppySocket","emitSocketProgress","getSocketHost","limitPromises","Uploader","createEventTracker","emitter","events","on","event","fn","push","remove","forEach","off","assertServerError","res","error","Error","message","module","exports","uppy","opts","type","id","title","client","defaultOptions","timeout","limit","createMultipartUpload","bind","listParts","prepareUploadPart","abortMultipartUpload","completeMultipartUpload","upload","limitRequests","uploaders","Object","create","uploaderEvents","uploaderSockets","resetUploaderReferences","fileID","abort","close","assertHost","serverUrl","file","post","filename","name","then","key","uploadId","encodeURIComponent","get","number","parts","uploadIdEnc","delete","uploadFile","resolve","reject","data","onStart","cFile","getFile","setFileState","s3Multipart","onProgress","bytesUploaded","bytesTotal","emit","uploader","onError","err","log","onSuccess","result","location","onPartComplete","part","onFileRemove","removed","onFilePause","isPaused","pause","start","onPauseAll","onCancelAll","really","onResumeAll","isRestored","uploadRemote","serverToken","connectToServerSocket","catch","fetch","remote","url","method","credentials","headers","body","JSON","stringify","protocol","size","metadata","meta","status","statusText","json","token","host","socket","target","send","onRetry","onRetryAll","progressData","errData","fileIDs","length","promises","map","isRemote","all","cb","targetFileID","filesToRetry","install","setState","capabilities","getState","resumableUploads","addUploader","uninstall","removeUploader"],"mappings":"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","file":"Multipart.js","sourcesContent":["const Plugin = require('../../core/Plugin')\r\nconst RequestClient = require('../../server/RequestClient')\r\nconst UppySocket = require('../../core/UppySocket')\r\nconst emitSocketProgress = require('../../utils/emitSocketProgress')\r\nconst getSocketHost = require('../../utils/getSocketHost')\r\nconst limitPromises = require('../../utils/limitPromises')\r\nconst Uploader = require('./MultipartUploader')\r\n\r\n/**\r\n * Create a wrapper around an event emitter with a `remove` method to remove\r\n * all events that were added using the wrapped emitter.\r\n */\r\nfunction createEventTracker (emitter) {\r\n  const events = []\r\n  return {\r\n    on (event, fn) {\r\n      events.push([ event, fn ])\r\n      return emitter.on(event, fn)\r\n    },\r\n    remove () {\r\n      events.forEach(([ event, fn ]) => {\r\n        emitter.off(event, fn)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertServerError (res) {\r\n  if (res && res.error) {\r\n    const error = new Error(res.message)\r\n    Object.assign(error, res.error)\r\n    throw error\r\n  }\r\n  return res\r\n}\r\n\r\nmodule.exports = class AwsS3Multipart extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'uploader'\r\n    this.id = 'AwsS3Multipart'\r\n    this.title = 'AWS S3 Multipart'\r\n    this.client = new RequestClient(uppy, opts)\r\n\r\n    const defaultOptions = {\r\n      timeout: 30 * 1000,\r\n      limit: 0,\r\n      createMultipartUpload: this.createMultipartUpload.bind(this),\r\n      listParts: this.listParts.bind(this),\r\n      prepareUploadPart: this.prepareUploadPart.bind(this),\r\n      abortMultipartUpload: this.abortMultipartUpload.bind(this),\r\n      completeMultipartUpload: this.completeMultipartUpload.bind(this)\r\n    }\r\n\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n\r\n    this.upload = this.upload.bind(this)\r\n\r\n    if (typeof this.opts.limit === 'number' && this.opts.limit !== 0) {\r\n      this.limitRequests = limitPromises(this.opts.limit)\r\n    } else {\r\n      this.limitRequests = (fn) => fn\r\n    }\r\n\r\n    this.uploaders = Object.create(null)\r\n    this.uploaderEvents = Object.create(null)\r\n    this.uploaderSockets = Object.create(null)\r\n  }\r\n\r\n  /**\r\n   * Clean up all references for a file's upload: the MultipartUploader instance,\r\n   * any events related to the file, and the uppy-server WebSocket connection.\r\n   */\r\n  resetUploaderReferences (fileID) {\r\n    if (this.uploaders[fileID]) {\r\n      this.uploaders[fileID].abort()\r\n      this.uploaders[fileID] = null\r\n    }\r\n    if (this.uploaderEvents[fileID]) {\r\n      this.uploaderEvents[fileID].remove()\r\n      this.uploaderEvents[fileID] = null\r\n    }\r\n    if (this.uploaderSockets[fileID]) {\r\n      this.uploaderSockets[fileID].close()\r\n      this.uploaderSockets[fileID] = null\r\n    }\r\n  }\r\n\r\n  assertHost () {\r\n    if (!this.opts.serverUrl) {\r\n      throw new Error('Expected a `serverUrl` option containing an uppy-server address.')\r\n    }\r\n  }\r\n\r\n  createMultipartUpload (file) {\r\n    this.assertHost()\r\n\r\n    return this.client.post('s3/multipart', {\r\n      filename: file.name,\r\n      type: file.type\r\n    }).then(assertServerError)\r\n  }\r\n\r\n  listParts (file, { key, uploadId }) {\r\n    this.assertHost()\r\n\r\n    const filename = encodeURIComponent(key)\r\n    return this.client.get(`s3/multipart/${uploadId}?key=${filename}`)\r\n      .then(assertServerError)\r\n  }\r\n\r\n  prepareUploadPart (file, { key, uploadId, number }) {\r\n    this.assertHost()\r\n\r\n    const filename = encodeURIComponent(key)\r\n    return this.client.get(`s3/multipart/${uploadId}/${number}?key=${filename}`)\r\n      .then(assertServerError)\r\n  }\r\n\r\n  completeMultipartUpload (file, { key, uploadId, parts }) {\r\n    this.assertHost()\r\n\r\n    const filename = encodeURIComponent(key)\r\n    const uploadIdEnc = encodeURIComponent(uploadId)\r\n    return this.client.post(`s3/multipart/${uploadIdEnc}/complete?key=${filename}`, { parts })\r\n      .then(assertServerError)\r\n  }\r\n\r\n  abortMultipartUpload (file, { key, uploadId }) {\r\n    this.assertHost()\r\n\r\n    const filename = encodeURIComponent(key)\r\n    const uploadIdEnc = encodeURIComponent(uploadId)\r\n    return this.client.delete(`s3/multipart/${uploadIdEnc}?key=${filename}`)\r\n      .then(assertServerError)\r\n  }\r\n\r\n  uploadFile (file) {\r\n    return new Promise((resolve, reject) => {\r\n      const upload = new Uploader(file.data, Object.assign({\r\n        // .bind to pass the file object to each handler.\r\n        createMultipartUpload: this.limitRequests(this.opts.createMultipartUpload.bind(this, file)),\r\n        listParts: this.limitRequests(this.opts.listParts.bind(this, file)),\r\n        prepareUploadPart: this.opts.prepareUploadPart.bind(this, file),\r\n        completeMultipartUpload: this.limitRequests(this.opts.completeMultipartUpload.bind(this, file)),\r\n        abortMultipartUpload: this.limitRequests(this.opts.abortMultipartUpload.bind(this, file)),\r\n\r\n        limit: this.opts.limit || 5,\r\n        onStart: (data) => {\r\n          const cFile = this.uppy.getFile(file.id)\r\n          this.uppy.setFileState(file.id, {\r\n            s3Multipart: Object.assign({}, cFile.s3Multipart, {\r\n              key: data.key,\r\n              uploadId: data.uploadId,\r\n              parts: []\r\n            })\r\n          })\r\n        },\r\n        onProgress: (bytesUploaded, bytesTotal) => {\r\n          this.uppy.emit('upload-progress', file, {\r\n            uploader: this,\r\n            bytesUploaded: bytesUploaded,\r\n            bytesTotal: bytesTotal\r\n          })\r\n        },\r\n        onError: (err) => {\r\n          this.uppy.log(err)\r\n          this.uppy.emit('upload-error', file, err)\r\n          err.message = `Failed because: ${err.message}`\r\n\r\n          this.resetUploaderReferences(file.id)\r\n          reject(err)\r\n        },\r\n        onSuccess: (result) => {\r\n          this.uppy.emit('upload-success', file, upload, result.location)\r\n\r\n          if (result.location) {\r\n            this.uppy.log('Download ' + upload.file.name + ' from ' + result.location)\r\n          }\r\n\r\n          this.resetUploaderReferences(file.id)\r\n          resolve(upload)\r\n        },\r\n        onPartComplete: (part) => {\r\n          // Store completed parts in state.\r\n          const cFile = this.uppy.getFile(file.id)\r\n          this.uppy.setFileState(file.id, {\r\n            s3Multipart: Object.assign({}, cFile.s3Multipart, {\r\n              parts: [\r\n                ...cFile.s3Multipart.parts,\r\n                part\r\n              ]\r\n            })\r\n          })\r\n\r\n          this.uppy.emit('s3-multipart:part-uploaded', cFile, part)\r\n        }\r\n      }, file.s3Multipart))\r\n\r\n      this.uploaders[file.id] = upload\r\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\r\n\r\n      this.onFileRemove(file.id, (removed) => {\r\n        this.resetUploaderReferences(file.id)\r\n        resolve(`upload ${removed.id} was removed`)\r\n      })\r\n\r\n      this.onFilePause(file.id, (isPaused) => {\r\n        if (isPaused) {\r\n          upload.pause()\r\n        } else {\r\n          upload.start()\r\n        }\r\n      })\r\n\r\n      this.onPauseAll(file.id, () => {\r\n        upload.pause()\r\n      })\r\n\r\n      this.onCancelAll(file.id, () => {\r\n        upload.abort({ really: true })\r\n      })\r\n\r\n      this.onResumeAll(file.id, () => {\r\n        upload.start()\r\n      })\r\n\r\n      if (!file.isPaused) {\r\n        upload.start()\r\n      }\r\n\r\n      if (!file.isRestored) {\r\n        this.uppy.emit('upload-started', file, upload)\r\n      }\r\n    })\r\n  }\r\n\r\n  uploadRemote (file) {\r\n    this.resetUploaderReferences(file.id)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (file.serverToken) {\r\n        return this.connectToServerSocket(file)\r\n          .then(() => resolve())\r\n          .catch(reject)\r\n      }\r\n\r\n      this.uppy.emit('upload-started', file)\r\n\r\n      fetch(file.remote.url, {\r\n        method: 'post',\r\n        credentials: 'include',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(Object.assign({}, file.remote.body, {\r\n          protocol: 's3-multipart',\r\n          size: file.data.size,\r\n          metadata: file.meta\r\n        }))\r\n      })\r\n      .then((res) => {\r\n        if (res.status < 200 || res.status > 300) {\r\n          return reject(res.statusText)\r\n        }\r\n\r\n        return res.json().then((data) => {\r\n          this.uppy.setFileState(file.id, { serverToken: data.token })\r\n          return this.uppy.getFile(file.id)\r\n        })\r\n      })\r\n      .then((file) => {\r\n        return this.connectToServerSocket(file)\r\n      })\r\n      .then(() => {\r\n        resolve()\r\n      })\r\n      .catch((err) => {\r\n        reject(new Error(err))\r\n      })\r\n    })\r\n  }\r\n\r\n  connectToServerSocket (file) {\r\n    return new Promise((resolve, reject) => {\r\n      const token = file.serverToken\r\n      const host = getSocketHost(file.remote.serverUrl)\r\n      const socket = new UppySocket({ target: `${host}/api/${token}` })\r\n      this.uploaderSockets[socket] = socket\r\n      this.uploaderEvents[file.id] = createEventTracker(this.uppy)\r\n\r\n      this.onFileRemove(file.id, (removed) => {\r\n        socket.send('pause', {})\r\n        resolve(`upload ${file.id} was removed`)\r\n      })\r\n\r\n      this.onFilePause(file.id, (isPaused) => {\r\n        socket.send(isPaused ? 'pause' : 'resume', {})\r\n      })\r\n\r\n      this.onPauseAll(file.id, () => socket.send('pause', {}))\r\n\r\n      this.onCancelAll(file.id, () => socket.send('pause', {}))\r\n\r\n      this.onResumeAll(file.id, () => {\r\n        if (file.error) {\r\n          socket.send('pause', {})\r\n        }\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      this.onRetry(file.id, () => {\r\n        socket.send('pause', {})\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      this.onRetryAll(file.id, () => {\r\n        socket.send('pause', {})\r\n        socket.send('resume', {})\r\n      })\r\n\r\n      if (file.isPaused) {\r\n        socket.send('pause', {})\r\n      }\r\n\r\n      socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\r\n\r\n      socket.on('error', (errData) => {\r\n        this.uppy.emit('upload-error', file, new Error(errData.error))\r\n        reject(new Error(errData.error))\r\n      })\r\n\r\n      socket.on('success', (data) => {\r\n        this.uppy.emit('upload-success', file, data, data.url)\r\n        resolve()\r\n      })\r\n    })\r\n  }\r\n\r\n  upload (fileIDs) {\r\n    if (fileIDs.length === 0) return Promise.resolve()\r\n\r\n    const promises = fileIDs.map((id) => {\r\n      const file = this.uppy.getFile(id)\r\n      if (file.isRemote) {\r\n        return this.uploadRemote(file)\r\n      }\r\n      return this.uploadFile(file)\r\n    })\r\n\r\n    return Promise.all(promises)\r\n  }\r\n\r\n  onFileRemove (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('file-removed', (file) => {\r\n      if (fileID === file.id) cb(file.id)\r\n    })\r\n  }\r\n\r\n  onFilePause (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('upload-pause', (targetFileID, isPaused) => {\r\n      if (fileID === targetFileID) {\r\n        // const isPaused = this.uppy.pauseResume(fileID)\r\n        cb(isPaused)\r\n      }\r\n    })\r\n  }\r\n\r\n  onRetry (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('upload-retry', (targetFileID) => {\r\n      if (fileID === targetFileID) {\r\n        cb()\r\n      }\r\n    })\r\n  }\r\n\r\n  onRetryAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('retry-all', (filesToRetry) => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onPauseAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('pause-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onCancelAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('cancel-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  onResumeAll (fileID, cb) {\r\n    this.uploaderEvents[fileID].on('resume-all', () => {\r\n      if (!this.uppy.getFile(fileID)) return\r\n      cb()\r\n    })\r\n  }\r\n\r\n  install () {\r\n    this.uppy.setState({\r\n      capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n        resumableUploads: true\r\n      })\r\n    })\r\n    this.uppy.addUploader(this.upload)\r\n  }\r\n\r\n  uninstall () {\r\n    this.uppy.setState({\r\n      capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n        resumableUploads: false\r\n      })\r\n    })\r\n    this.uppy.removeUploader(this.upload)\r\n  }\r\n}\r\n"]}