{"version":3,"sources":["../../src/plugins/Form.js"],"names":["Plugin","require","findDOMElement","getFormData","default","module","exports","uppy","opts","type","id","title","defaultOptions","target","resultName","getMetaFromForm","addResultToForm","submitOnSuccess","triggerUploadOnSubmit","handleFormSubmit","bind","handleUploadStart","handleSuccess","result","form","submit","ev","preventDefault","upload","catch","err","log","stack","message","resultInput","querySelector","value","JSON","stringify","document","createElement","name","appendChild","formMeta","setMeta","install","nodeName","console","error","addEventListener","on","uninstall","removeEventListener","off"],"mappings":"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","file":"Form.js","sourcesContent":["const Plugin = require('../core/Plugin')\r\nconst findDOMElement = require('../utils/findDOMElement')\r\n// Rollup uses get-form-data's ES modules build, and rollup-plugin-commonjs automatically resolves `.default`.\r\n// So, if we are being built using rollup, this require() won't have a `.default` property.\r\nconst getFormData = require('get-form-data').default || require('get-form-data')\r\n\r\n/**\r\n * Form\r\n */\r\nmodule.exports = class Form extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'acquirer'\r\n    this.id = 'Form'\r\n    this.title = 'Form'\r\n\r\n    // set default options\r\n    const defaultOptions = {\r\n      target: null,\r\n      resultName: 'uppyResult',\r\n      getMetaFromForm: true,\r\n      addResultToForm: true,\r\n      submitOnSuccess: false,\r\n      triggerUploadOnSubmit: false\r\n    }\r\n\r\n    // merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n\r\n    this.handleFormSubmit = this.handleFormSubmit.bind(this)\r\n    this.handleUploadStart = this.handleUploadStart.bind(this)\r\n    this.handleSuccess = this.handleSuccess.bind(this)\r\n    this.addResultToForm = this.addResultToForm.bind(this)\r\n    this.getMetaFromForm = this.getMetaFromForm.bind(this)\r\n  }\r\n\r\n  handleUploadStart () {\r\n    if (this.opts.getMetaFromForm) {\r\n      this.getMetaFromForm()\r\n    }\r\n  }\r\n\r\n  handleSuccess (result) {\r\n    if (this.opts.addResultToForm) {\r\n      this.addResultToForm(result)\r\n    }\r\n\r\n    if (this.opts.submitOnSuccess) {\r\n      this.form.submit()\r\n    }\r\n  }\r\n\r\n  handleFormSubmit (ev) {\r\n    if (this.opts.triggerUploadOnSubmit) {\r\n      ev.preventDefault()\r\n      this.uppy.upload().catch((err) => {\r\n        this.uppy.log(err.stack || err.message || err)\r\n      })\r\n    }\r\n  }\r\n\r\n  addResultToForm (result) {\r\n    this.uppy.log('[Form] Adding result to the original form:')\r\n    this.uppy.log(result)\r\n\r\n    let resultInput = this.form.querySelector(`[name=\"${this.opts.resultName}\"]`)\r\n    if (resultInput) {\r\n      resultInput.value = JSON.stringify(result)\r\n      return\r\n    }\r\n\r\n    resultInput = document.createElement('input')\r\n    resultInput.name = this.opts.resultName\r\n    resultInput.type = 'hidden'\r\n    resultInput.value = JSON.stringify(result)\r\n    this.form.appendChild(resultInput)\r\n  }\r\n\r\n  getMetaFromForm () {\r\n    const formMeta = getFormData(this.form)\r\n    this.uppy.setMeta(formMeta)\r\n  }\r\n\r\n  install () {\r\n    this.form = findDOMElement(this.opts.target)\r\n    if (!this.form || !this.form.nodeName === 'FORM') {\r\n      console.error('Form plugin requires a <form> target element passed in options to operate, none was found', 'error')\r\n      return\r\n    }\r\n\r\n    this.form.addEventListener('submit', this.handleFormSubmit)\r\n    this.uppy.on('upload', this.handleUploadStart)\r\n    this.uppy.on('complete', this.handleSuccess)\r\n  }\r\n\r\n  uninstall () {\r\n    this.form.removeEventListener('submit', this.handleFormSubmit)\r\n    this.uppy.off('upload', this.handleUploadStart)\r\n    this.uppy.off('complete', this.handleSuccess)\r\n  }\r\n}\r\n"]}