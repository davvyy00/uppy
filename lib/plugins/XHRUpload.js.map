{"version":3,"sources":["../../src/plugins/XHRUpload.js"],"names":["Plugin","require","cuid","Translator","UppySocket","Provider","emitSocketProgress","getSocketHost","settle","limitPromises","buildResponseError","xhr","error","Error","data","request","module","exports","uppy","opts","type","id","title","defaultLocale","strings","timedOut","defaultOptions","formData","fieldName","method","metaFields","responseUrlFieldName","bundle","headers","locale","timeout","limit","withCredentials","getResponseData","responseText","response","parsedResponse","JSON","parse","err","console","log","getResponseError","translator","i18n","translate","bind","handleUpload","limitUploads","fn","getOptions","file","overrides","getState","xhrUpload","createProgressTimeout","timeoutHandler","self","isDone","onTimedOut","seconds","Math","ceil","aliveTimer","progress","clearTimeout","setTimeout","done","createFormDataUpload","formPost","FormData","Array","isArray","Object","keys","meta","forEach","item","append","createBareUpload","upload","current","total","resolve","reject","timer","abort","emit","XMLHttpRequest","addEventListener","ev","loaded","lengthComputable","uploader","bytesUploaded","bytesTotal","target","status","body","uploadURL","setFileState","name","open","toUpperCase","endpoint","header","setRequestHeader","send","on","removedFile","fileID","uploadRemote","fields","provider","remote","providerOptions","post","url","size","fieldname","metadata","then","res","token","host","serverUrl","socket","progressData","resp","close","errData","message","cause","uploadBundle","files","i","emitError","uploadFiles","actions","map","parseInt","length","isRemote","promises","action","limitedAction","fileIDs","getFile","install","setState","capabilities","bundled","addUploader","uninstall","removeUploader"],"mappings":"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","file":"XHRUpload.js","sourcesContent":["const Plugin = require('../core/Plugin')\r\nconst cuid = require('cuid')\r\nconst Translator = require('../core/Translator')\r\nconst UppySocket = require('../core/UppySocket')\r\nconst Provider = require('../server/Provider')\r\nconst emitSocketProgress = require('../utils/emitSocketProgress')\r\nconst getSocketHost = require('../utils/getSocketHost')\r\nconst settle = require('../utils/settle')\r\nconst limitPromises = require('../utils/limitPromises')\r\n\r\nfunction buildResponseError (xhr, error) {\r\n  // No error message\r\n  if (!error) error = new Error('Upload error')\r\n  // Got an error message string\r\n  if (typeof error === 'string') error = new Error(error)\r\n  // Got something else\r\n  if (!(error instanceof Error)) {\r\n    error = Object.assign(new Error('Upload error'), { data: error })\r\n  }\r\n\r\n  error.request = xhr\r\n  return error\r\n}\r\n\r\nmodule.exports = class XHRUpload extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'uploader'\r\n    this.id = 'XHRUpload'\r\n    this.title = 'XHRUpload'\r\n\r\n    const defaultLocale = {\r\n      strings: {\r\n        timedOut: 'Upload stalled for %{seconds} seconds, aborting.'\r\n      }\r\n    }\r\n\r\n    // Default options\r\n    const defaultOptions = {\r\n      formData: true,\r\n      fieldName: 'files[]',\r\n      method: 'post',\r\n      metaFields: null,\r\n      responseUrlFieldName: 'url',\r\n      bundle: false,\r\n      headers: {},\r\n      locale: defaultLocale,\r\n      timeout: 30 * 1000,\r\n      limit: 0,\r\n      withCredentials: false,\r\n      /**\r\n       * @typedef respObj\r\n       * @property {string} responseText\r\n       * @property {number} status\r\n       * @property {string} statusText\r\n       * @property {Object.<string, string>} headers\r\n       *\r\n       * @param {string} responseText the response body string\r\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\r\n       */\r\n      getResponseData (responseText, response) {\r\n        let parsedResponse = {}\r\n        try {\r\n          parsedResponse = JSON.parse(responseText)\r\n        } catch (err) {\r\n          console.log(err)\r\n        }\r\n\r\n        return parsedResponse\r\n      },\r\n      /**\r\n       *\r\n       * @param {string} responseText the response body string\r\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\r\n       */\r\n      getResponseError (responseText, response) {\r\n        return new Error('Upload error')\r\n      }\r\n    }\r\n\r\n    // Merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n    this.locale = Object.assign({}, defaultLocale, this.opts.locale)\r\n    this.locale.strings = Object.assign({}, defaultLocale.strings, this.opts.locale.strings)\r\n\r\n    // i18n\r\n    this.translator = new Translator({ locale: this.locale })\r\n    this.i18n = this.translator.translate.bind(this.translator)\r\n\r\n    this.handleUpload = this.handleUpload.bind(this)\r\n\r\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\r\n    if (typeof this.opts.limit === 'number' && this.opts.limit !== 0) {\r\n      this.limitUploads = limitPromises(this.opts.limit)\r\n    } else {\r\n      this.limitUploads = (fn) => fn\r\n    }\r\n\r\n    if (this.opts.bundle && !this.opts.formData) {\r\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.')\r\n    }\r\n  }\r\n\r\n  getOptions (file) {\r\n    const overrides = this.uppy.getState().xhrUpload\r\n    const opts = Object.assign({},\r\n      this.opts,\r\n      overrides || {},\r\n      file.xhrUpload || {}\r\n    )\r\n    opts.headers = {}\r\n    Object.assign(opts.headers, this.opts.headers)\r\n    if (overrides) {\r\n      Object.assign(opts.headers, overrides.headers)\r\n    }\r\n    if (file.xhrUpload) {\r\n      Object.assign(opts.headers, file.xhrUpload.headers)\r\n    }\r\n\r\n    return opts\r\n  }\r\n\r\n  // Helper to abort upload requests if there has not been any progress for `timeout` ms.\r\n  // Create an instance using `timer = createProgressTimeout(10000, onTimeout)`\r\n  // Call `timer.progress()` to signal that there has been progress of any kind.\r\n  // Call `timer.done()` when the upload has completed.\r\n  createProgressTimeout (timeout, timeoutHandler) {\r\n    const uppy = this.uppy\r\n    const self = this\r\n    let isDone = false\r\n\r\n    function onTimedOut () {\r\n      uppy.log(`[XHRUpload] timed out`)\r\n      const error = new Error(self.i18n('timedOut', { seconds: Math.ceil(timeout / 1000) }))\r\n      timeoutHandler(error)\r\n    }\r\n\r\n    let aliveTimer = null\r\n    function progress () {\r\n      // Some browsers fire another progress event when the upload is\r\n      // cancelled, so we have to ignore progress after the timer was\r\n      // told to stop.\r\n      if (isDone) return\r\n\r\n      if (timeout > 0) {\r\n        if (aliveTimer) clearTimeout(aliveTimer)\r\n        aliveTimer = setTimeout(onTimedOut, timeout)\r\n      }\r\n    }\r\n\r\n    function done () {\r\n      uppy.log(`[XHRUpload] timer done`)\r\n      if (aliveTimer) {\r\n        clearTimeout(aliveTimer)\r\n        aliveTimer = null\r\n      }\r\n      isDone = true\r\n    }\r\n\r\n    return {\r\n      progress,\r\n      done\r\n    }\r\n  }\r\n\r\n  createFormDataUpload (file, opts) {\r\n    const formPost = new FormData()\r\n\r\n    const metaFields = Array.isArray(opts.metaFields)\r\n      ? opts.metaFields\r\n      // Send along all fields by default.\r\n      : Object.keys(file.meta)\r\n    metaFields.forEach((item) => {\r\n      formPost.append(item, file.meta[item])\r\n    })\r\n\r\n    formPost.append(opts.fieldName, file.data)\r\n\r\n    return formPost\r\n  }\r\n\r\n  createBareUpload (file, opts) {\r\n    return file.data\r\n  }\r\n\r\n  upload (file, current, total) {\r\n    const opts = this.getOptions(file)\r\n\r\n    this.uppy.log(`uploading ${current} of ${total}`)\r\n    return new Promise((resolve, reject) => {\r\n      const data = opts.formData\r\n        ? this.createFormDataUpload(file, opts)\r\n        : this.createBareUpload(file, opts)\r\n\r\n      const timer = this.createProgressTimeout(opts.timeout, (error) => {\r\n        xhr.abort()\r\n        this.uppy.emit('upload-error', file, error)\r\n        reject(error)\r\n      })\r\n\r\n      const xhr = new XMLHttpRequest()\r\n      const id = cuid()\r\n\r\n      xhr.upload.addEventListener('loadstart', (ev) => {\r\n        this.uppy.log(`[XHRUpload] ${id} started`)\r\n        // Begin checking for timeouts when loading starts.\r\n        timer.progress()\r\n      })\r\n\r\n      xhr.upload.addEventListener('progress', (ev) => {\r\n        this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`)\r\n        timer.progress()\r\n\r\n        if (ev.lengthComputable) {\r\n          this.uppy.emit('upload-progress', file, {\r\n            uploader: this,\r\n            bytesUploaded: ev.loaded,\r\n            bytesTotal: ev.total\r\n          })\r\n        }\r\n      })\r\n\r\n      xhr.addEventListener('load', (ev) => {\r\n        this.uppy.log(`[XHRUpload] ${id} finished`)\r\n        timer.done()\r\n\r\n        if (ev.target.status >= 200 && ev.target.status < 300) {\r\n          const body = opts.getResponseData(xhr.responseText, xhr)\r\n          const uploadURL = body[opts.responseUrlFieldName]\r\n\r\n          const response = {\r\n            status: ev.target.status,\r\n            body,\r\n            uploadURL\r\n          }\r\n\r\n          this.uppy.setFileState(file.id, { response })\r\n\r\n          this.uppy.emit('upload-success', file, body, uploadURL)\r\n\r\n          if (uploadURL) {\r\n            this.uppy.log(`Download ${file.name} from ${file.uploadURL}`)\r\n          }\r\n\r\n          return resolve(file)\r\n        } else {\r\n          const body = opts.getResponseData(xhr.responseText, xhr)\r\n          const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\r\n\r\n          const response = {\r\n            status: ev.target.status,\r\n            body\r\n          }\r\n\r\n          this.uppy.setFileState(file.id, { response })\r\n\r\n          this.uppy.emit('upload-error', file, error)\r\n          return reject(error)\r\n        }\r\n      })\r\n\r\n      xhr.addEventListener('error', (ev) => {\r\n        this.uppy.log(`[XHRUpload] ${id} errored`)\r\n        timer.done()\r\n\r\n        const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr))\r\n        this.uppy.emit('upload-error', file, error)\r\n        return reject(error)\r\n      })\r\n\r\n      xhr.open(opts.method.toUpperCase(), opts.endpoint, true)\r\n\r\n      xhr.withCredentials = opts.withCredentials\r\n\r\n      Object.keys(opts.headers).forEach((header) => {\r\n        xhr.setRequestHeader(header, opts.headers[header])\r\n      })\r\n\r\n      xhr.send(data)\r\n\r\n      this.uppy.on('file-removed', (removedFile) => {\r\n        if (removedFile.id === file.id) {\r\n          timer.done()\r\n          xhr.abort()\r\n        }\r\n      })\r\n\r\n      this.uppy.on('upload-cancel', (fileID) => {\r\n        if (fileID === file.id) {\r\n          timer.done()\r\n          xhr.abort()\r\n        }\r\n      })\r\n\r\n      this.uppy.on('cancel-all', () => {\r\n        timer.done()\r\n        xhr.abort()\r\n      })\r\n    })\r\n  }\r\n\r\n  uploadRemote (file, current, total) {\r\n    const opts = this.getOptions(file)\r\n    return new Promise((resolve, reject) => {\r\n      const fields = {}\r\n      const metaFields = Array.isArray(opts.metaFields)\r\n        ? opts.metaFields\r\n        // Send along all fields by default.\r\n        : Object.keys(file.meta)\r\n\r\n      metaFields.forEach((name) => {\r\n        fields[name] = file.meta[name]\r\n      })\r\n\r\n      const provider = new Provider(this.uppy, file.remote.providerOptions)\r\n      provider.post(\r\n        file.remote.url,\r\n        Object.assign({}, file.remote.body, {\r\n          endpoint: opts.endpoint,\r\n          size: file.data.size,\r\n          fieldname: opts.fieldName,\r\n          metadata: fields,\r\n          headers: opts.headers\r\n        })\r\n      )\r\n      .then((res) => {\r\n        const token = res.token\r\n        const host = getSocketHost(file.remote.serverUrl)\r\n        const socket = new UppySocket({ target: `${host}/api/${token}` })\r\n\r\n        socket.on('progress', (progressData) => emitSocketProgress(this, progressData, file))\r\n\r\n        socket.on('success', (data) => {\r\n          const resp = opts.getResponseData(data.response.responseText, data.response)\r\n          const uploadURL = resp[opts.responseUrlFieldName]\r\n          this.uppy.emit('upload-success', file, resp, uploadURL)\r\n          socket.close()\r\n          return resolve()\r\n        })\r\n\r\n        socket.on('error', (errData) => {\r\n          const resp = errData.response\r\n          const error = resp\r\n            ? opts.getResponseError(resp.responseText, resp)\r\n            : Object.assign(new Error(errData.error.message), { cause: errData.error })\r\n          this.uppy.emit('upload-error', file, error)\r\n          reject(error)\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  uploadBundle (files) {\r\n    return new Promise((resolve, reject) => {\r\n      const endpoint = this.opts.endpoint\r\n      const method = this.opts.method\r\n\r\n      const formData = new FormData()\r\n      files.forEach((file, i) => {\r\n        const opts = this.getOptions(file)\r\n        formData.append(opts.fieldName, file.data)\r\n      })\r\n\r\n      const xhr = new XMLHttpRequest()\r\n\r\n      xhr.withCredentials = this.opts.withCredentials\r\n\r\n      const timer = this.createProgressTimeout(this.opts.timeout, (error) => {\r\n        xhr.abort()\r\n        emitError(error)\r\n        reject(error)\r\n      })\r\n\r\n      const emitError = (error) => {\r\n        files.forEach((file) => {\r\n          this.uppy.emit('upload-error', file, error)\r\n        })\r\n      }\r\n\r\n      xhr.upload.addEventListener('loadstart', (ev) => {\r\n        this.uppy.log('[XHRUpload] started uploading bundle')\r\n        timer.progress()\r\n      })\r\n\r\n      xhr.upload.addEventListener('progress', (ev) => {\r\n        timer.progress()\r\n\r\n        if (!ev.lengthComputable) return\r\n\r\n        files.forEach((file) => {\r\n          this.uppy.emit('upload-progress', file, {\r\n            uploader: this,\r\n            bytesUploaded: ev.loaded / ev.total * file.size,\r\n            bytesTotal: file.size\r\n          })\r\n        })\r\n      })\r\n\r\n      xhr.addEventListener('load', (ev) => {\r\n        timer.done()\r\n\r\n        if (ev.target.status >= 200 && ev.target.status < 300) {\r\n          const resp = this.opts.getResponseData(xhr.responseText, xhr)\r\n          files.forEach((file) => {\r\n            this.uppy.emit('upload-success', file, resp)\r\n          })\r\n          return resolve()\r\n        }\r\n\r\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\r\n        error.request = xhr\r\n        emitError(error)\r\n        return reject(error)\r\n      })\r\n\r\n      xhr.addEventListener('error', (ev) => {\r\n        timer.done()\r\n\r\n        const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error')\r\n        emitError(error)\r\n        return reject(error)\r\n      })\r\n\r\n      this.uppy.on('cancel-all', () => {\r\n        timer.done()\r\n        xhr.abort()\r\n      })\r\n\r\n      xhr.open(method.toUpperCase(), endpoint, true)\r\n\r\n      xhr.withCredentials = this.opts.withCredentials\r\n\r\n      Object.keys(this.opts.headers).forEach((header) => {\r\n        xhr.setRequestHeader(header, this.opts.headers[header])\r\n      })\r\n\r\n      xhr.send(formData)\r\n\r\n      files.forEach((file) => {\r\n        this.uppy.emit('upload-started', file)\r\n      })\r\n    })\r\n  }\r\n\r\n  uploadFiles (files) {\r\n    const actions = files.map((file, i) => {\r\n      const current = parseInt(i, 10) + 1\r\n      const total = files.length\r\n\r\n      if (file.error) {\r\n        return () => Promise.reject(new Error(file.error))\r\n      } else if (file.isRemote) {\r\n        // We emit upload-started here, so that it's also emitted for files\r\n        // that have to wait due to the `limit` option.\r\n        this.uppy.emit('upload-started', file)\r\n        return this.uploadRemote.bind(this, file, current, total)\r\n      } else {\r\n        this.uppy.emit('upload-started', file)\r\n        return this.upload.bind(this, file, current, total)\r\n      }\r\n    })\r\n\r\n    const promises = actions.map((action) => {\r\n      const limitedAction = this.limitUploads(action)\r\n      return limitedAction()\r\n    })\r\n\r\n    return settle(promises)\r\n  }\r\n\r\n  handleUpload (fileIDs) {\r\n    if (fileIDs.length === 0) {\r\n      this.uppy.log('[XHRUpload] No files to upload!')\r\n      return Promise.resolve()\r\n    }\r\n\r\n    this.uppy.log('[XHRUpload] Uploading...')\r\n    const files = fileIDs.map((fileID) => this.uppy.getFile(fileID))\r\n\r\n    if (this.opts.bundle) {\r\n      return this.uploadBundle(files)\r\n    }\r\n\r\n    return this.uploadFiles(files).then(() => null)\r\n  }\r\n\r\n  install () {\r\n    if (this.opts.bundle) {\r\n      this.uppy.setState({\r\n        capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n          bundled: true\r\n        })\r\n      })\r\n    }\r\n\r\n    this.uppy.addUploader(this.handleUpload)\r\n  }\r\n\r\n  uninstall () {\r\n    if (this.opts.bundle) {\r\n      this.uppy.setState({\r\n        capabilities: Object.assign({}, this.uppy.getState().capabilities, {\r\n          bundled: true\r\n        })\r\n      })\r\n    }\r\n\r\n    this.uppy.removeUploader(this.handleUpload)\r\n  }\r\n}\r\n"]}