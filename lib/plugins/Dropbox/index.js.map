{"version":3,"sources":["../../../src/plugins/Dropbox/index.js"],"names":["Plugin","require","Provider","ProviderView","icons","h","module","exports","uppy","opts","type","id","title","icon","serverUrl","provider","files","onAuth","bind","render","defaultOptions","serverPattern","install","view","setPluginState","authenticated","folders","directories","activeRow","filterInput","isSearchVisible","target","mount","uninstall","tearDown","unmount","getFolder","getUsername","data","user_email","isFolder","item","getItemData","getItemIcon","getItemSubList","entries","getItemName","name","getMimeType","getItemId","getItemRequestPath","encodeURIComponent","path_lower","getItemModifiedDate","server_modified","getItemThumbnailUrl","Dropbox","state"],"mappings":"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","file":"index.js","sourcesContent":["const Plugin = require('../../core/Plugin')\r\nconst { Provider } = require('../../server')\r\nconst { ProviderView } = require('../../views')\r\nconst icons = require('./icons')\r\nconst { h } = require('preact')\r\n\r\nmodule.exports = class Dropbox extends Plugin {\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.type = 'acquirer'\r\n    this.id = this.opts.id || 'Dropbox'\r\n    this.title = 'Dropbox'\r\n    this.icon = () => (\r\n      <svg class=\"UppyIcon\" width=\"128\" height=\"118\" viewBox=\"0 0 128 118\">\r\n        <path d=\"M38.145.777L1.108 24.96l25.608 20.507 37.344-23.06z\" />\r\n        <path d=\"M1.108 65.975l37.037 24.183L64.06 68.525l-37.343-23.06zM64.06 68.525l25.917 21.633 37.036-24.183-25.61-20.51z\" />\r\n        <path d=\"M127.014 24.96L89.977.776 64.06 22.407l37.345 23.06zM64.136 73.18l-25.99 21.567-11.122-7.262v8.142l37.112 22.256 37.114-22.256v-8.142l-11.12 7.262z\" />\r\n      </svg>\r\n    )\r\n\r\n    // writing out the key explicitly for readability the key used to store\r\n    // the provider instance must be equal to this.id.\r\n    this[this.id] = new Provider(uppy, {\r\n      serverUrl: this.opts.serverUrl,\r\n      provider: 'dropbox'\r\n    })\r\n\r\n    this.files = []\r\n\r\n    this.onAuth = this.onAuth.bind(this)\r\n    this.render = this.render.bind(this)\r\n\r\n    // set default options\r\n    const defaultOptions = {}\r\n\r\n    // merge default options with the ones set by user\r\n    this.opts = Object.assign({}, defaultOptions, opts)\r\n    this.opts.serverPattern = opts.serverPattern || opts.serverUrl\r\n  }\r\n\r\n  install () {\r\n    this.view = new ProviderView(this)\r\n    // Set default state for Dropbox\r\n    this.setPluginState({\r\n      authenticated: false,\r\n      files: [],\r\n      folders: [],\r\n      directories: [],\r\n      activeRow: -1,\r\n      filterInput: '',\r\n      isSearchVisible: false\r\n    })\r\n\r\n    const target = this.opts.target\r\n    if (target) {\r\n      this.mount(target, this)\r\n    }\r\n  }\r\n\r\n  uninstall () {\r\n    this.view.tearDown()\r\n    this.unmount()\r\n  }\r\n\r\n  onAuth (authenticated) {\r\n    this.setPluginState({ authenticated })\r\n    if (authenticated) {\r\n      this.view.getFolder()\r\n    }\r\n  }\r\n\r\n  getUsername (data) {\r\n    return data.user_email\r\n  }\r\n\r\n  isFolder (item) {\r\n    return item['.tag'] === 'folder'\r\n  }\r\n\r\n  getItemData (item) {\r\n    return item\r\n  }\r\n\r\n  getItemIcon (item) {\r\n    return icons[item['.tag']]()\r\n  }\r\n\r\n  getItemSubList (item) {\r\n    return item.entries\r\n  }\r\n\r\n  getItemName (item) {\r\n    return item.name || ''\r\n  }\r\n\r\n  getMimeType (item) {\r\n    // mime types aren't supported.\r\n    return null\r\n  }\r\n\r\n  getItemId (item) {\r\n    return item.id\r\n  }\r\n\r\n  getItemRequestPath (item) {\r\n    return encodeURIComponent(item.path_lower)\r\n  }\r\n\r\n  getItemModifiedDate (item) {\r\n    return item.server_modified\r\n  }\r\n\r\n  getItemThumbnailUrl (item) {\r\n    return `${this.opts.serverUrl}/${this.Dropbox.id}/thumbnail/${this.getItemRequestPath(item)}`\r\n  }\r\n\r\n  render (state) {\r\n    return this.view.render(state)\r\n  }\r\n}\r\n"]}