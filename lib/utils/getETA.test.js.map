{"version":3,"sources":["../../src/utils/getETA.test.js"],"names":["getETA","require","describe","it","dateNow","Date","date5SecondsAgo","getTime","fileProgress","bytesUploaded","bytesTotal","uploadStarted","expect","toEqual"],"mappings":"AAAA,IAAMA,SAASC,QAAQ,UAAR,CAAf;;AAEAC,SAAS,QAAT,EAAmB,YAAM;AACvBC,KAAG,6DAAH,EAAkE,YAAM;AACtE,QAAMC,UAAU,IAAIC,IAAJ,EAAhB;AACA,QAAMC,kBAAkB,IAAID,IAAJ,CAASD,QAAQG,OAAR,KAAoB,IAAI,IAAjC,CAAxB;AACA,QAAMC,eAAe;AACnBC,qBAAe,IADI;AAEnBC,kBAAY,IAFO;AAGnBC,qBAAeL;AAHI,KAArB;AAKAM,WAAOZ,OAAOQ,YAAP,CAAP,EAA6BK,OAA7B,CAAqC,IAArC;AACD,GATD;AAUD,CAXD","file":"getETA.test.js","sourcesContent":["const getETA = require('./getETA')\r\n\r\ndescribe('getETA', () => {\r\n  it('should get the ETA remaining based on a fileProgress object', () => {\r\n    const dateNow = new Date()\r\n    const date5SecondsAgo = new Date(dateNow.getTime() - 5 * 1000)\r\n    const fileProgress = {\r\n      bytesUploaded: 1024,\r\n      bytesTotal: 3096,\r\n      uploadStarted: date5SecondsAgo\r\n    }\r\n    expect(getETA(fileProgress)).toEqual(10.1)\r\n  })\r\n})\r\n"]}