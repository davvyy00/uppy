{"version":3,"sources":["../../src/utils/getFileNameAndExtension.test.js"],"names":["getFileNameAndExtension","require","describe","it","expect","toEqual","name","extension","undefined"],"mappings":"AAAA,IAAMA,0BAA0BC,QAAQ,2BAAR,CAAhC;;AAEAC,SAAS,yBAAT,EAAoC,YAAM;AACxCC,KAAG,sDAAH,EAA2D,YAAM;AAC/DC,WAAOJ,wBAAwB,qBAAxB,CAAP,EAAuDK,OAAvD,CAA+D;AAC7DC,YAAM,iBADuD;AAE7DC,iBAAW;AAFkD,KAA/D;AAID,GALD;;AAOAJ,KAAG,iCAAH,EAAsC,YAAM;AAC1CC,WAAOJ,wBAAwB,iBAAxB,CAAP,EAAmDK,OAAnD,CAA2D;AACzDC,YAAM,iBADmD;AAEzDC,iBAAWC;AAF8C,KAA3D;AAID,GALD;AAMD,CAdD","file":"getFileNameAndExtension.test.js","sourcesContent":["const getFileNameAndExtension = require('./getFileNameAndExtension')\r\n\r\ndescribe('getFileNameAndExtension', () => {\r\n  it('should return the filename and extension as an array', () => {\r\n    expect(getFileNameAndExtension('fsdfjodsuf23rfw.jpg')).toEqual({\r\n      name: 'fsdfjodsuf23rfw',\r\n      extension: 'jpg'\r\n    })\r\n  })\r\n\r\n  it('should handle invalid filenames', () => {\r\n    expect(getFileNameAndExtension('fsdfjodsuf23rfw')).toEqual({\r\n      name: 'fsdfjodsuf23rfw',\r\n      extension: undefined\r\n    })\r\n  })\r\n})\r\n"]}