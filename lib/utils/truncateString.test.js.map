{"version":3,"sources":["../../src/utils/truncateString.test.js"],"names":["truncateString","require","describe","it","expect","toEqual"],"mappings":"AAAA,IAAMA,iBAAiBC,QAAQ,kBAAR,CAAvB;;AAEAC,SAAS,gBAAT,EAA2B,YAAM;AAC/BC,KAAG,oDAAH,EAAyD,YAAM;AAC7DC,WAAOJ,eAAe,cAAf,EAA+B,EAA/B,CAAP,EAA2CK,OAA3C,CAAmD,aAAnD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,YAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,WAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,UAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,UAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,SAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,QAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,OAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,OAAlD;AACAD,WAAOJ,eAAe,cAAf,EAA+B,CAA/B,CAAP,EAA0CK,OAA1C,CAAkD,MAAlD;AACD,GAXD;AAYD,CAbD","file":"truncateString.test.js","sourcesContent":["const truncateString = require('./truncateString')\r\n\r\ndescribe('truncateString', () => {\r\n  it('should truncate the string by the specified amount', () => {\r\n    expect(truncateString('abcdefghijkl', 10)).toEqual('abcde...jkl')\r\n    expect(truncateString('abcdefghijkl', 9)).toEqual('abcd...jkl')\r\n    expect(truncateString('abcdefghijkl', 8)).toEqual('abcd...kl')\r\n    expect(truncateString('abcdefghijkl', 7)).toEqual('abc...kl')\r\n    expect(truncateString('abcdefghijkl', 6)).toEqual('abc...kl')\r\n    expect(truncateString('abcdefghijkl', 5)).toEqual('ab...kl')\r\n    expect(truncateString('abcdefghijkl', 4)).toEqual('ab...l')\r\n    expect(truncateString('abcdefghijkl', 3)).toEqual('a...l')\r\n    expect(truncateString('abcdefghijkl', 2)).toEqual('a...l')\r\n    expect(truncateString('abcdefghijkl', 1)).toEqual('...l')\r\n  })\r\n})\r\n"]}