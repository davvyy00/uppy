{"version":3,"sources":["../../src/utils/getSpeed.test.js"],"names":["getSpeed","require","describe","it","dateNow","Date","date5SecondsAgo","getTime","fileProgress","bytesUploaded","uploadStarted","expect","Math","round","toEqual"],"mappings":"AAAA,IAAMA,WAAWC,QAAQ,YAAR,CAAjB;;AAEAC,SAAS,UAAT,EAAqB,YAAM;AACzBC,KAAG,wDAAH,EAA6D,YAAM;AACjE,QAAMC,UAAU,IAAIC,IAAJ,EAAhB;AACA,QAAMC,kBAAkB,IAAID,IAAJ,CAASD,QAAQG,OAAR,KAAoB,IAAI,IAAjC,CAAxB;AACA,QAAMC,eAAe;AACnBC,qBAAe,IADI;AAEnBC,qBAAeJ;AAFI,KAArB;AAIAK,WAAOC,KAAKC,KAAL,CAAWb,SAASQ,YAAT,CAAX,CAAP,EAA2CM,OAA3C,CAAmDF,KAAKC,KAAL,CAAW,GAAX,CAAnD;AACD,GARD;AASD,CAVD","file":"getSpeed.test.js","sourcesContent":["const getSpeed = require('./getSpeed')\r\n\r\ndescribe('getSpeed', () => {\r\n  it('should calculate the speed given a fileProgress object', () => {\r\n    const dateNow = new Date()\r\n    const date5SecondsAgo = new Date(dateNow.getTime() - 5 * 1000)\r\n    const fileProgress = {\r\n      bytesUploaded: 1024,\r\n      uploadStarted: date5SecondsAgo\r\n    }\r\n    expect(Math.round(getSpeed(fileProgress))).toEqual(Math.round(205))\r\n  })\r\n})\r\n"]}